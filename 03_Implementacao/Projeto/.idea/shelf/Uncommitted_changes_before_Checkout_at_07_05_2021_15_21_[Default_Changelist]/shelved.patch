Index: app/src/main/java/com/example/habemusfesta/RegisterActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.habemusfesta;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.Toast;\r\n\r\nimport com.google.android.gms.auth.api.signin.GoogleSignInOptions;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.auth.*;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\n\r\npublic class RegisterActivity extends AppCompatActivity {\r\n\r\n    private FirebaseAuth mAuth;\r\n    private String TAG = \"REGISTER: \";\r\n    private FirebaseDatabase firebaseDatabase;\r\n    private EditText inputUsername;\r\n    private EditText inputEmail;\r\n    private EditText inputPassword;\r\n    private EditText inputRepeatPassword;\r\n    private Button registerBtn;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_register);\r\n\r\n        mAuth = FirebaseAuth.getInstance();\r\n        firebaseDatabase = FirebaseDatabase.getInstance();\r\n\r\n        inputUsername = findViewById(R.id.inputUsername);\r\n        inputEmail = findViewById(R.id.inputEmail);\r\n        inputPassword = findViewById(R.id.inputPassword);\r\n        inputRepeatPassword = findViewById(R.id.inputRepeatPassword);\r\n\r\n        registerBtn = findViewById(R.id.buttonSubmitRegister);\r\n        registerBtn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                String result = checkInvalidData(inputUsername.getText().toString(), inputEmail.getText().toString(), inputPassword.getText().toString(), inputRepeatPassword.getText().toString());\r\n                //Check invalid data\r\n                if(result.equals(\"Validated\")){\r\n                    //proceed with register\r\n                    createNewAccount(inputUsername.getText().toString(),inputEmail.getText().toString(),inputPassword.getText().toString());\r\n                }\r\n                else{\r\n                    Toast.makeText(RegisterActivity.this, result, Toast.LENGTH_SHORT).show();\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    @Override\r\n    public void onStart() {\r\n        super.onStart();\r\n        // Check if user is signed in (non-null) and update UI accordingly.\r\n        //FirebaseUser currentUser = mAuth.getCurrentUser();\r\n        //updateUI(currentUser);\r\n    }\r\n\r\n    //Function that validates the entries from the register form, returning either a \"Validated\" string or the consequent problem\r\n    private String checkInvalidData(String inputUsername, String inputEmail, String inputPassword, String inputRepeatPassword){\r\n        if( inputUsername.length() < 3 || inputUsername.length() > 12 || !inputUsername.matches(\"[A-Za-z0-9]+\") ){ //Check if username only has valid characters (letters and numbers)\r\n            return \"Username must be between 3 to 12 characters with no special characters or whitespaces (only letters and numbers)\";\r\n        }\r\n        if( !android.util.Patterns.EMAIL_ADDRESS.matcher(inputEmail).matches() ){\r\n            return \"Invalid email. Please try again\";\r\n        }\r\n        if( inputPassword.length() < 5 || inputPassword.length() > 15 ){\r\n            return \"Password must be between 5 and 15 characters\";\r\n        }\r\n        if( !inputPassword.equals(inputRepeatPassword) ){\r\n            return \"RepeatPassword and Password are not the same\";\r\n        }\r\n        return \"Validated\";\r\n    }\r\n\r\n    //Function that creates a new account via Firebase Authentication, and also stores user data in Firebase RealTimeDatabase\r\n    private void createNewAccount(String username, String email, String password){\r\n        //Check if username already in DB\r\n        DatabaseReference ref = FirebaseDatabase.getInstance().getReference();\r\n        ref.child(\"Users\").orderByChild(\"username\").equalTo(username).addListenerForSingleValueEvent(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(DataSnapshot dataSnapshot) {\r\n                if(dataSnapshot.exists()){\r\n                    // if given username exists\r\n                    Toast.makeText(RegisterActivity.this, \"Username already in use. Choose another one\",\r\n                            Toast.LENGTH_SHORT).show();\r\n                    return;\r\n                } else {\r\n                    //Create user\r\n                    mAuth.createUserWithEmailAndPassword(email, password)\r\n                            .addOnCompleteListener(RegisterActivity.this, new OnCompleteListener<AuthResult>() {\r\n                                @Override\r\n                                public void onComplete(@NonNull Task<AuthResult> task) {\r\n                                    if (task.isSuccessful()) { //User succesfully created\r\n                                        Log.d(TAG, \"createUserWithEmail:success\");\r\n                                        // if given username does not exist yet\r\n                                        User newuser = new User(username, email, \"Normal\");\r\n                                        ref.child(\"Users\").child(mAuth.getUid()).setValue(newuser);\r\n\r\n                                        //Authentication complete message\r\n                                        Toast.makeText(RegisterActivity.this, \"Authentication completed.\",\r\n                                                Toast.LENGTH_SHORT).show();\r\n\r\n                                        //Go back to Login Screen\r\n                                        Intent intent = new Intent(RegisterActivity.this, MainActivity.class); // start ResultActivity\r\n                                        startActivityForResult(intent, 1);\r\n\r\n                                    } else {\r\n\r\n                                        try\r\n                                        {\r\n                                            throw task.getException();\r\n                                        }\r\n                                        catch (FirebaseAuthUserCollisionException existEmail) //If the given email is already registered in the DB\r\n                                        {\r\n                                            Log.d(TAG, \"onComplete: exist_email\");\r\n                                            Toast.makeText(RegisterActivity.this, \"Email is already in use. Try another one\",\r\n                                                    Toast.LENGTH_SHORT).show();\r\n                                            // TODO: Take your action\r\n                                        }\r\n                                        catch (Exception e) // If sign up fails, display a message to the user.\r\n                                        {\r\n                                            Log.w(TAG, \"createUserWithEmail:failure\", task.getException());\r\n                                            Toast.makeText(RegisterActivity.this, \"Authentication failed. Try resetting your internet connection.\",\r\n                                                    Toast.LENGTH_SHORT).show();\r\n                                        }\r\n                                    }\r\n                                }\r\n                            });\r\n\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(DatabaseError databaseError) {\r\n                Toast.makeText(RegisterActivity.this, \"Error:\"+databaseError.getMessage()+\". Please try again\",\r\n                        Toast.LENGTH_SHORT).show();\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    //Function that stores user data in Firebase RealTimeDatabase, given from Google Sign-In method\r\n    public static void createNewAccountWithGoogle(String username, String email, FirebaseAuth mAuth){\r\n\r\n        DatabaseReference ref = FirebaseDatabase.getInstance().getReference();\r\n        User newUser = new User(username, email, \"Normal\");\r\n        ref.child(\"Users\").child(mAuth.getUid()).setValue(newUser);\r\n\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/habemusfesta/RegisterActivity.java	(revision f64484c6e37e528f49dad55db4d9b06a000cac8c)
+++ app/src/main/java/com/example/habemusfesta/RegisterActivity.java	(date 1620320813256)
@@ -155,7 +155,7 @@
     }
 
     //Function that stores user data in Firebase RealTimeDatabase, given from Google Sign-In method
-    public static void createNewAccountWithGoogle(String username, String email, FirebaseAuth mAuth){
+    public static void createNewAccountWithAuthProvider(String username, String email, FirebaseAuth mAuth){
 
         DatabaseReference ref = FirebaseDatabase.getInstance().getReference();
         User newUser = new User(username, email, "Normal");
Index: app/src/main/java/com/example/habemusfesta/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.habemusfesta;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport com.facebook.CallbackManager;\r\nimport com.facebook.FacebookCallback;\r\nimport com.facebook.FacebookException;\r\nimport com.facebook.login.Login;\r\nimport com.facebook.login.LoginBehavior;\r\nimport com.facebook.login.LoginManager;\r\nimport com.facebook.login.LoginResult;\r\nimport com.facebook.login.widget.LoginButton;\r\nimport com.google.android.gms.auth.api.Auth;\r\nimport com.google.android.gms.auth.api.signin.GoogleSignIn;\r\nimport com.google.android.gms.auth.api.signin.GoogleSignInAccount;\r\nimport com.google.android.gms.auth.api.signin.GoogleSignInClient;\r\nimport com.google.android.gms.auth.api.signin.GoogleSignInOptions;\r\nimport com.google.android.gms.auth.api.signin.GoogleSignInResult;\r\nimport com.google.android.gms.common.api.ApiException;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.auth.AuthCredential;\r\nimport com.google.firebase.auth.AuthResult;\r\nimport com.google.firebase.auth.FacebookAuthProvider;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.GoogleAuthProvider;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\n\r\nimport com.facebook.FacebookSdk;\r\nimport com.facebook.appevents.AppEventsLogger;\r\n\r\nimport java.util.Arrays;\r\nimport java.util.HashMap;\r\n\r\npublic class MainActivity extends AppCompatActivity {\r\n\r\n    public static final int REGISTER_REQUEST = 1;\r\n    public static final int NORMAL_LOGIN_REQUEST = 2;\r\n    public static final int GOOGLE_LOGIN_REQUEST = 3;\r\n    private FirebaseAuth mAuth;\r\n\r\n    private String TAG = \"LOGIN: \";\r\n    private TextView inputUsernameEmail;\r\n    private TextView inputPassword;\r\n    private Button loginBtn;\r\n    private Button googleSignBtn;\r\n    private Button facebookSignInBtn;\r\n    private TextView txtRegister;\r\n\r\n    private GoogleSignInOptions mGoogleSignInOptions;\r\n    private GoogleSignInClient mGoogleSignInClient;\r\n    private GoogleSignInAccount mGoogleSignInAccount;\r\n    private CallbackManager mCallbackManager;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n\r\n        //Facebook Sign-In\r\n        mCallbackManager = CallbackManager.Factory.create();\r\n\r\n        facebookSignInBtn = findViewById(R.id.facebookSign);\r\n        facebookSignInBtn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                if(LoginManager.getInstance()!=null){ //sign out current account\r\n                    LoginManager.getInstance().logOut();\r\n                }\r\n                com.facebook.login.widget.LoginButton facebookCallbackBtn = new com.facebook.login.widget.LoginButton(MainActivity.this);\r\n                facebookCallbackBtn.setOnClickListener(new View.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(View v) {\r\n                        facebookCallbackBtn.setPermissions(\"email\",\"public_profile\");\r\n                        // Callback registration\r\n                        facebookCallbackBtn.registerCallback(mCallbackManager, new FacebookCallback<LoginResult>() {\r\n                            @Override\r\n                            public void onSuccess(LoginResult loginResult) {\r\n                                Log.d(TAG,\"onSuccess\" + loginResult);\r\n                                signInWithFacebook(loginResult.getAccessToken().getToken());\r\n                            }\r\n\r\n                            @Override\r\n                            public void onCancel() {\r\n                                Toast.makeText(MainActivity.this, \"Error: Please try again.\",\r\n                                        Toast.LENGTH_SHORT).show();\r\n                                return;\r\n                            }\r\n\r\n                            @Override\r\n                            public void onError(FacebookException exception) {\r\n                                Toast.makeText(MainActivity.this, \"Error: Please try again.\",\r\n                                        Toast.LENGTH_SHORT).show();\r\n                                return;\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n                facebookCallbackBtn.performClick();\r\n            }\r\n        });\r\n\r\n\r\n        //Google Sign-In\r\n        mGoogleSignInOptions = new GoogleSignInOptions.Builder(GoogleSignInOptions.DEFAULT_SIGN_IN)\r\n                .requestIdToken(getString(R.string.google_web_client_id))\r\n                .requestEmail()\r\n                .build();\r\n        mGoogleSignInClient = GoogleSignIn.getClient(this, mGoogleSignInOptions);\r\n\r\n        //Normal Sign-In\r\n        mAuth = FirebaseAuth.getInstance();\r\n        inputUsernameEmail = findViewById(R.id.inputUsername);\r\n        inputPassword = findViewById(R.id.inputPassword);\r\n\r\n        loginBtn = findViewById(R.id.loginBtn);\r\n        loginBtn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                if( inputUsernameEmail.getText().toString().length() == 0 || inputPassword.getText().toString().length() == 0 ){\r\n                    Toast.makeText(MainActivity.this, \"Error: username/email or password missing.\", Toast.LENGTH_SHORT).show();\r\n                }else {\r\n                    checkAuthenticationEntry(inputUsernameEmail.getText().toString(), inputPassword.getText().toString());\r\n                }\r\n            }\r\n        });\r\n\r\n        googleSignBtn = findViewById(R.id.googleSign);\r\n        googleSignBtn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                startActivitySignWithGoogle();\r\n            }\r\n        });\r\n\r\n        txtRegister = findViewById(R.id.txtRegister);\r\n        txtRegister.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent intent = new Intent(MainActivity.this, RegisterActivity.class); // start ResultActivity\r\n                startActivityForResult(intent, REGISTER_REQUEST);\r\n            }\r\n        });\r\n    }\r\n\r\n    @Override\r\n    protected void onStart() {\r\n        super.onStart();\r\n    }\r\n\r\n    private void checkAuthenticationEntry(String usernameOrEmail, String password){ //checks if authentication entry is an username or an email, then proceeds to call signInUser method\r\n        if(android.util.Patterns.EMAIL_ADDRESS.matcher(usernameOrEmail).matches()){ //if given entry is an emai\r\n            signInUser(usernameOrEmail, password);\r\n        }else {// if its a user, check the Firebase RealTimeDatabase to see if its a valid one\r\n            DatabaseReference ref = FirebaseDatabase.getInstance().getReference();\r\n            ref.child(\"Users\").orderByChild(\"username\").equalTo(usernameOrEmail).addListenerForSingleValueEvent(new ValueEventListener() {\r\n                @Override\r\n                public void onDataChange(DataSnapshot dataSnapshot) {\r\n                    if (dataSnapshot.exists()) {\r\n                        // if given username exists\r\n                        HashMap dS = (HashMap)(dataSnapshot.getValue());\r\n                        String uid = dS.keySet().toArray()[0].toString();\r\n                        User u = dataSnapshot.child(uid).getValue(User.class);\r\n                        if(u.getEmail()!=null && !u.getEmail().equals(\"\")) {\r\n                            signInUser(u.getEmail(), password);\r\n                        }else{\r\n                            Toast.makeText(MainActivity.this, \"Error: No email attached in the DB. Please contact support.\",\r\n                                    Toast.LENGTH_SHORT).show();\r\n                            return;\r\n                        }\r\n                    } else {\r\n                        Toast.makeText(MainActivity.this, \"Error: Invalid username. Please try again.\",\r\n                                Toast.LENGTH_SHORT).show();\r\n                        return;\r\n                    }\r\n                }\r\n\r\n                @Override\r\n                public void onCancelled(@NonNull DatabaseError databaseError) {\r\n                    Toast.makeText(MainActivity.this, \"Error. Please try again.\",\r\n                            Toast.LENGTH_SHORT).show();\r\n                    return;\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    private void signInUser(String email, String password){\r\n        mAuth.signInWithEmailAndPassword(email, password)\r\n                .addOnCompleteListener(this, new OnCompleteListener<AuthResult>() {\r\n                    @Override\r\n                    public void onComplete(@NonNull Task<AuthResult> task) {\r\n                        if (task.isSuccessful()) {\r\n                            // Sign in success\r\n                            Log.d(TAG, \"signInWithEmail:success\");\r\n\r\n                            //Check if its a normal user or an employer\r\n                            DatabaseReference ref = FirebaseDatabase.getInstance().getReference();\r\n                            ref.child(\"Users\").orderByChild(\"email\").equalTo(email).addListenerForSingleValueEvent(new ValueEventListener() {\r\n                                @Override\r\n                                public void onDataChange(DataSnapshot dataSnapshot) {\r\n                                    if(dataSnapshot.exists()) {\r\n                                        HashMap dS = (HashMap)(dataSnapshot.getValue());\r\n                                        String uid = dS.keySet().toArray()[0].toString();\r\n                                        User u = dataSnapshot.child(uid).getValue(User.class);\r\n\r\n                                        String user_type = u.getUser_type();\r\n\r\n                                        Intent intent;\r\n                                        if (user_type.equals(\"Normal\")) { //If its a normal user\r\n                                            intent = new Intent(MainActivity.this, HomeUserLogin.class); // start ResultActivity\r\n                                        } else if (user_type.equals(\"Admin\")) { //if its an admin\r\n                                            intent = new Intent(MainActivity.this, HomeAdminLogin.class); // start ResultActivity\r\n                                        } else {\r\n                                            Toast.makeText(MainActivity.this, \"Error: User not found.\", Toast.LENGTH_SHORT).show();\r\n                                            return;\r\n                                        }\r\n\r\n                                        intent.putExtra(\"user_id\", uid);\r\n                                        intent.putExtra(\"username\", u.getUsername());\r\n                                        startActivityForResult(intent, NORMAL_LOGIN_REQUEST);\r\n                                    }else {\r\n                                        Toast.makeText(MainActivity.this, \"Error: User not found.\", Toast.LENGTH_SHORT).show();\r\n                                        return;\r\n                                    }\r\n                                }\r\n\r\n                                @Override\r\n                                public void onCancelled(@NonNull DatabaseError databaseError) {\r\n                                    Toast.makeText(MainActivity.this, \"Authentication failed.\", Toast.LENGTH_SHORT).show();\r\n                                }\r\n                            });\r\n                        } else {\r\n                            // If sign in fails, display a message to the user.\r\n                            Log.w(TAG, \"signInWithEmail:failure\", task.getException());\r\n                            Toast.makeText(MainActivity.this, \"Authentication failed.\", Toast.LENGTH_SHORT).show();\r\n                        }\r\n                    }\r\n                });\r\n    }\r\n\r\n    private void startActivitySignWithGoogle() {\r\n        Intent signInIntent = mGoogleSignInClient.getSignInIntent();\r\n        startActivityForResult(signInIntent, GOOGLE_LOGIN_REQUEST);\r\n    }\r\n\r\n    @Override\r\n    public void onActivityResult(int requestCode, int resultCode, Intent data) {\r\n        mCallbackManager.onActivityResult(requestCode, resultCode, data);\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n\r\n        // Result returned from launching the Intent from GoogleSignInClient.getSignInIntent(...);\r\n        if (requestCode == GOOGLE_LOGIN_REQUEST) {\r\n            // The Task returned from this call is always completed, no need to attach\r\n            // a listener.\r\n            Task<GoogleSignInAccount> task = GoogleSignIn.getSignedInAccountFromIntent(data);\r\n            try{\r\n                GoogleSignInAccount account = task.getResult(ApiException.class);\r\n                String idToken = account.getIdToken();\r\n                signInWithGoogle(idToken);\r\n            } catch (ApiException e) {\r\n                // The ApiException status code indicates the detailed failure reason.\r\n                // Please refer to the GoogleSignInStatusCodes class reference for more information.\r\n                Log.w(TAG, \"signInResult:failed code=\" + e.getStatusCode());\r\n                Toast.makeText(MainActivity.this, \"Authentication failed. Try again.\", Toast.LENGTH_SHORT).show();\r\n            }\r\n        }\r\n    }\r\n\r\n    private void signInWithGoogle(String idToken) {\r\n        //Get idToken from GoogleSignInAccount and create a credential\r\n        AuthCredential credential = GoogleAuthProvider.getCredential(idToken, null);\r\n\r\n        mAuth.signInWithCredential(credential)\r\n                .addOnCompleteListener(this, new OnCompleteListener<AuthResult>() {\r\n                    @Override\r\n                    public void onComplete(@NonNull Task<AuthResult> task) {\r\n                        if (task.isSuccessful()) {\r\n                            // Sign in success, update UI with the signed-in user's information\r\n                            Log.d(TAG, \"signInWithCredential:success\");\r\n\r\n                            mGoogleSignInAccount = GoogleSignIn.getLastSignedInAccount(MainActivity.this);\r\n                            // Signed in successfully, show authenticated UI.\r\n                            String email = mGoogleSignInAccount.getEmail();\r\n\r\n                            //Check if its a normal user or an employer\r\n                            DatabaseReference ref = FirebaseDatabase.getInstance().getReference();\r\n                            ref.child(\"Users\").orderByChild(\"email\").equalTo(email).addListenerForSingleValueEvent(new ValueEventListener() {\r\n                                @Override\r\n                                public void onDataChange(DataSnapshot dataSnapshot) {\r\n                                    if(dataSnapshot.exists()) {\r\n                                        HashMap dS = (HashMap)(dataSnapshot.getValue());\r\n                                        String uid = dS.keySet().toArray()[0].toString();\r\n                                        User u = dataSnapshot.child(uid).getValue(User.class);\r\n                                        String user_type = u.getUser_type();\r\n\r\n                                        Intent intent;\r\n                                        if (user_type.equals(\"Normal\")) { //If its a normal user\r\n                                            intent = new Intent(MainActivity.this, HomeUserLogin.class); // start ResultActivity\r\n                                        } else if (user_type.equals(\"Admin\")) { //if its an admin\r\n                                            intent = new Intent(MainActivity.this, HomeAdminLogin.class); // start ResultActivity\r\n                                        } else {\r\n                                            Toast.makeText(MainActivity.this, \"Error: User not found.\", Toast.LENGTH_SHORT).show();\r\n                                            return;\r\n                                        }\r\n\r\n                                        intent.putExtra(\"user_id\", uid);\r\n                                        intent.putExtra(\"username\", u.getUsername());\r\n\r\n                                        startActivityForResult(intent, GOOGLE_LOGIN_REQUEST);\r\n                                    }else {\r\n                                        //Create User\r\n                                        String username = mGoogleSignInAccount.getDisplayName();\r\n                                        RegisterActivity.createNewAccountWithGoogle(username, email, mAuth);\r\n\r\n                                        Intent intent = new Intent(MainActivity.this, HomeUserLogin.class);\r\n                                        intent.putExtra(\"user_id\", mAuth.getUid());\r\n                                        intent.putExtra(\"username\", username);\r\n\r\n                                        startActivityForResult(intent, GOOGLE_LOGIN_REQUEST);\r\n                                    }\r\n                                }\r\n                                @Override\r\n                                public void onCancelled(@NonNull DatabaseError databaseError) {\r\n                                    Toast.makeText(MainActivity.this, \"Authentication failed.\", Toast.LENGTH_SHORT).show();\r\n                                }\r\n                            });\r\n                        } else {\r\n                            // If sign in fails, display a message to the user.\r\n                            Log.w(TAG, \"signInWithCredential:failure\", task.getException());\r\n                        }\r\n                    }\r\n                });\r\n    }\r\n\r\n    private void signInWithFacebook(String idToken){\r\n        AuthCredential credential = FacebookAuthProvider.getCredential(idToken);\r\n        mAuth.signInWithCredential(credential)\r\n                .addOnCompleteListener(this, new OnCompleteListener<AuthResult>() {\r\n                    @Override\r\n                    public void onComplete(@NonNull Task<AuthResult> task) {\r\n                        if (task.isSuccessful()) {\r\n                            // Sign in success, update UI with the signed-in user's information\r\n                            Log.d(TAG, \"signInWithCredential:success\");\r\n\r\n                            // Signed in successfully, show authenticated UI.\r\n                            String email = mAuth.getCurrentUser().getEmail();\r\n\r\n                            //Check if its a normal user or an employer\r\n                            DatabaseReference ref = FirebaseDatabase.getInstance().getReference();\r\n                            ref.child(\"Users\").orderByChild(\"email\").equalTo(email).addListenerForSingleValueEvent(new ValueEventListener() {\r\n                                @Override\r\n                                public void onDataChange(DataSnapshot dataSnapshot) {\r\n                                    if(dataSnapshot.exists()) {\r\n                                        HashMap dS = (HashMap)(dataSnapshot.getValue());\r\n                                        String uid = dS.keySet().toArray()[0].toString();\r\n                                        User u = dataSnapshot.child(uid).getValue(User.class);\r\n                                        String user_type = u.getUser_type();\r\n\r\n                                        Intent intent;\r\n                                        if (user_type.equals(\"Normal\")) { //If its a normal user\r\n                                            intent = new Intent(MainActivity.this, HomeUserLogin.class); // start ResultActivity\r\n                                        } else if (user_type.equals(\"Admin\")) { //if its an admin\r\n                                            intent = new Intent(MainActivity.this, HomeAdminLogin.class); // start ResultActivity\r\n                                        } else {\r\n                                            Toast.makeText(MainActivity.this, \"Error: User not found.\", Toast.LENGTH_SHORT).show();\r\n                                            return;\r\n                                        }\r\n\r\n                                        intent.putExtra(\"user_id\", uid);\r\n                                        intent.putExtra(\"username\", u.getUsername());\r\n\r\n                                        startActivityForResult(intent, GOOGLE_LOGIN_REQUEST);\r\n                                    }else {\r\n                                        //Create User\r\n                                        String username = mAuth.getCurrentUser().getDisplayName();\r\n                                        RegisterActivity.createNewAccountWithGoogle(username, email, mAuth);\r\n\r\n                                        Intent intent = new Intent(MainActivity.this, HomeUserLogin.class);\r\n                                        intent.putExtra(\"user_id\", mAuth.getUid());\r\n                                        intent.putExtra(\"username\", username);\r\n\r\n                                        startActivityForResult(intent, GOOGLE_LOGIN_REQUEST);\r\n                                    }\r\n                                }\r\n                                @Override\r\n                                public void onCancelled(@NonNull DatabaseError databaseError) {\r\n                                    Toast.makeText(MainActivity.this, \"Authentication failed.\", Toast.LENGTH_SHORT).show();\r\n                                }\r\n                            });\r\n                        } else {\r\n                            // If sign in fails, display a message to the user.\r\n                            Log.w(TAG, \"signInWithCredential:failure\", task.getException());\r\n                        }\r\n                    }\r\n                });\r\n    }\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/habemusfesta/MainActivity.java	(revision f64484c6e37e528f49dad55db4d9b06a000cac8c)
+++ app/src/main/java/com/example/habemusfesta/MainActivity.java	(date 1620322029414)
@@ -4,6 +4,7 @@
 import androidx.appcompat.app.AppCompatActivity;
 
 import android.content.Intent;
+import android.media.FaceDetector;
 import android.os.Bundle;
 import android.util.Log;
 import android.view.View;
@@ -90,13 +91,11 @@
                             @Override
                             public void onSuccess(LoginResult loginResult) {
                                 Log.d(TAG,"onSuccess" + loginResult);
-                                signInWithFacebook(loginResult.getAccessToken().getToken());
+                                checkIfAlreadyRegistered("FACEBOOK", loginResult.getAccessToken().getToken());
                             }
 
                             @Override
                             public void onCancel() {
-                                Toast.makeText(MainActivity.this, "Error: Please try again.",
-                                        Toast.LENGTH_SHORT).show();
                                 return;
                             }
 
@@ -199,6 +198,7 @@
     }
 
     private void signInUser(String email, String password){
+
         mAuth.signInWithEmailAndPassword(email, password)
                 .addOnCompleteListener(this, new OnCompleteListener<AuthResult>() {
                     @Override
@@ -268,9 +268,9 @@
             // a listener.
             Task<GoogleSignInAccount> task = GoogleSignIn.getSignedInAccountFromIntent(data);
             try{
-                GoogleSignInAccount account = task.getResult(ApiException.class);
-                String idToken = account.getIdToken();
-                signInWithGoogle(idToken);
+                mGoogleSignInAccount = task.getResult(ApiException.class);
+                String idToken = mGoogleSignInAccount.getIdToken();
+                checkIfAlreadyRegistered("GOOGLE", idToken);
             } catch (ApiException e) {
                 // The ApiException status code indicates the detailed failure reason.
                 // Please refer to the GoogleSignInStatusCodes class reference for more information.
@@ -280,10 +280,60 @@
         }
     }
 
-    private void signInWithGoogle(String idToken) {
-        //Get idToken from GoogleSignInAccount and create a credential
-        AuthCredential credential = GoogleAuthProvider.getCredential(idToken, null);
+    private void checkIfAlreadyRegistered(String authProviderName, String idToken) {
+        AuthCredential credential;
+        //Get credential from GoogleAuthProvider or FacebookAuthProvider
+        if(authProviderName.equals("GOOGLE")){
+            credential = GoogleAuthProvider.getCredential(idToken, null);
+        }else{
+            credential = FacebookAuthProvider.getCredential(idToken);
+        }
+
+        //Check if its a user already registered
+        DatabaseReference ref = FirebaseDatabase.getInstance().getReference();
+        ref.child("Users").orderByChild("email").equalTo(mAuth.getCurrentUser().getEmail()).addListenerForSingleValueEvent(new ValueEventListener() {
+            @Override
+            public void onDataChange(DataSnapshot dataSnapshot) {
+                if(dataSnapshot.exists()) {
+                    linkOrSignUserAccount(authProviderName, credential);
+                }else {
+                    Toast.makeText(MainActivity.this, "Error: User not found.", Toast.LENGTH_SHORT).show();
+                    return;
+                }
+            }
+
+            @Override
+            public void onCancelled(@NonNull DatabaseError databaseError) {
+                Toast.makeText(MainActivity.this, "Authentication failed.", Toast.LENGTH_SHORT).show();
+            }
+        });
+
+    }
+
+    private void linkOrSignUserAccount(String authProviderName, AuthCredential credential){ //Method that links user account to other auth providers, so that the user can login from any one of them
+        mAuth.getCurrentUser().linkWithCredential(credential)
+                .addOnCompleteListener(this, new OnCompleteListener<AuthResult>() {
+                    @Override
+                    public void onComplete(@NonNull Task<AuthResult> task) {
+                        if (task.isSuccessful()) {
+                            Log.d(TAG, "linkWithCredential:success");
+                        } else {
+                            Log.w(TAG, "linkWithCredential:failure", task.getException());
+                            Toast.makeText(MainActivity.this, "Authentication failed.",
+                                    Toast.LENGTH_SHORT).show();
+                        }
+                        if(authProviderName.equals("GOOGLE")) {
+                            signInWithGoogle(credential);
+                        }else {
+                            signInWithFacebook(credential);
+                        }
+                    }
+                });
 
+
+    }
+
+    private void signInWithGoogle(AuthCredential credential){
         mAuth.signInWithCredential(credential)
                 .addOnCompleteListener(this, new OnCompleteListener<AuthResult>() {
                     @Override
@@ -292,9 +342,8 @@
                             // Sign in success, update UI with the signed-in user's information
                             Log.d(TAG, "signInWithCredential:success");
 
-                            mGoogleSignInAccount = GoogleSignIn.getLastSignedInAccount(MainActivity.this);
                             // Signed in successfully, show authenticated UI.
-                            String email = mGoogleSignInAccount.getEmail();
+                            String email = mAuth.getCurrentUser().getEmail();
 
                             //Check if its a normal user or an employer
                             DatabaseReference ref = FirebaseDatabase.getInstance().getReference();
@@ -323,8 +372,8 @@
                                         startActivityForResult(intent, GOOGLE_LOGIN_REQUEST);
                                     }else {
                                         //Create User
-                                        String username = mGoogleSignInAccount.getDisplayName();
-                                        RegisterActivity.createNewAccountWithGoogle(username, email, mAuth);
+                                        String username = mAuth.getCurrentUser().getDisplayName();
+                                        RegisterActivity.createNewAccountWithAuthProvider(username, email, mAuth);
 
                                         Intent intent = new Intent(MainActivity.this, HomeUserLogin.class);
                                         intent.putExtra("user_id", mAuth.getUid());
@@ -345,9 +394,8 @@
                     }
                 });
     }
+    private void signInWithFacebook(AuthCredential credential){
 
-    private void signInWithFacebook(String idToken){
-        AuthCredential credential = FacebookAuthProvider.getCredential(idToken);
         mAuth.signInWithCredential(credential)
                 .addOnCompleteListener(this, new OnCompleteListener<AuthResult>() {
                     @Override
@@ -387,7 +435,7 @@
                                     }else {
                                         //Create User
                                         String username = mAuth.getCurrentUser().getDisplayName();
-                                        RegisterActivity.createNewAccountWithGoogle(username, email, mAuth);
+                                        RegisterActivity.createNewAccountWithAuthProvider(username, email, mAuth);
 
                                         Intent intent = new Intent(MainActivity.this, HomeUserLogin.class);
                                         intent.putExtra("user_id", mAuth.getUid());
@@ -407,6 +455,7 @@
                         }
                     }
                 });
+
     }
 }
 
Index: app/src/main/java/com/example/habemusfesta/User.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.habemusfesta;\r\n\r\npublic class User {\r\n\r\n    private String username;\r\n    private String email;\r\n    private String user_type;\r\n    //public\r\n\r\n    public User() {\r\n        // Default constructor required for calls to DataSnapshot.getValue(User.class)\r\n    }\r\n\r\n    public User(String username,  String email, String user_type) {\r\n        this.username = username;\r\n        this.email = email;\r\n        this.user_type = user_type;\r\n        //this.qrcode = ;\r\n    }\r\n    public String getUsername(){\r\n        return this.username;\r\n    }\r\n    public String getUser_type(){\r\n        return this.user_type;\r\n    }\r\n    public String getEmail(){\r\n        return this.email;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/habemusfesta/User.java	(revision f64484c6e37e528f49dad55db4d9b06a000cac8c)
+++ app/src/main/java/com/example/habemusfesta/User.java	(date 1620318476553)
@@ -5,7 +5,6 @@
     private String username;
     private String email;
     private String user_type;
-    //public
 
     public User() {
         // Default constructor required for calls to DataSnapshot.getValue(User.class)
