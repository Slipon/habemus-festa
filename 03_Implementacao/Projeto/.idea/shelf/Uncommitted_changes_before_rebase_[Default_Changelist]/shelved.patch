Index: app/src/main/java/com/example/habemusfesta/RegisterActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.habemusfesta;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.Toast;\r\n\r\nimport com.google.android.gms.auth.api.signin.GoogleSignInOptions;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.auth.*;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\n\r\npublic class RegisterActivity extends AppCompatActivity {\r\n\r\n    private FirebaseAuth mAuth;\r\n    private String TAG = \"REGISTER: \";\r\n    private FirebaseDatabase firebaseDatabase;\r\n    private EditText inputUsername;\r\n    private EditText inputEmail;\r\n    private EditText inputPassword;\r\n    private EditText inputRepeatPassword;\r\n    private Button registerBtn;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_register);\r\n\r\n        mAuth = FirebaseAuth.getInstance();\r\n        firebaseDatabase = FirebaseDatabase.getInstance();\r\n\r\n        inputUsername = findViewById(R.id.inputUsername);\r\n        inputEmail = findViewById(R.id.inputEmail);\r\n        inputPassword = findViewById(R.id.inputPassword);\r\n        inputRepeatPassword = findViewById(R.id.inputRepeatPassword);\r\n\r\n        registerBtn = findViewById(R.id.buttonSubmitRegister);\r\n        registerBtn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                String result = checkInvalidData(inputUsername.getText().toString(), inputEmail.getText().toString(), inputPassword.getText().toString(), inputRepeatPassword.getText().toString());\r\n                //Check invalid data\r\n                if(result.equals(\"Validated\")){\r\n                    //proceed with register\r\n                    createNewAccount(inputUsername.getText().toString(),inputEmail.getText().toString(),inputPassword.getText().toString());\r\n                }\r\n                else{\r\n                    Toast.makeText(RegisterActivity.this, result, Toast.LENGTH_SHORT).show();\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    @Override\r\n    public void onStart() {\r\n        super.onStart();\r\n        // Check if user is signed in (non-null) and update UI accordingly.\r\n        //FirebaseUser currentUser = mAuth.getCurrentUser();\r\n        //updateUI(currentUser);\r\n    }\r\n\r\n    //Function that validates the entries from the register form, returning either a \"Validated\" string or the consequent problem\r\n    private String checkInvalidData(String inputUsername, String inputEmail, String inputPassword, String inputRepeatPassword){\r\n        if( inputUsername.length() < 3 || inputUsername.length() > 12 || !inputUsername.matches(\"[A-Za-z0-9]+\") ){ //Check if username only has valid characters (letters and numbers)\r\n            return \"Username must be between 3 to 12 characters with no special characters or whitespaces (only letters and numbers)\";\r\n        }\r\n        if( !android.util.Patterns.EMAIL_ADDRESS.matcher(inputEmail).matches() ){\r\n            return \"Invalid email. Please try again\";\r\n        }\r\n        if( inputPassword.length() < 5 || inputPassword.length() > 15 ){\r\n            return \"Password must be between 5 and 15 characters\";\r\n        }\r\n        if( !inputPassword.equals(inputRepeatPassword) ){\r\n            return \"RepeatPassword and Password are not the same\";\r\n        }\r\n        return \"Validated\";\r\n    }\r\n\r\n    //Function that creates a new account via Firebase Authentication, and also stores user data in Firebase RealTimeDatabase\r\n    private void createNewAccount(String username, String email, String password){\r\n        //Check if username already in DB\r\n        DatabaseReference ref = FirebaseDatabase.getInstance().getReference();\r\n        ref.child(\"Users\").orderByChild(\"username\").equalTo(username).addListenerForSingleValueEvent(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(DataSnapshot dataSnapshot) {\r\n                if(dataSnapshot.exists()){\r\n                    // if given username exists\r\n                    Toast.makeText(RegisterActivity.this, \"Username already in use. Choose another one\",\r\n                            Toast.LENGTH_SHORT).show();\r\n                    return;\r\n                } else {\r\n                    //Create user\r\n                    mAuth.createUserWithEmailAndPassword(email, password)\r\n                            .addOnCompleteListener(RegisterActivity.this, new OnCompleteListener<AuthResult>() {\r\n                                @Override\r\n                                public void onComplete(@NonNull Task<AuthResult> task) {\r\n                                    if (task.isSuccessful()) { //User succesfully created\r\n                                        Log.d(TAG, \"createUserWithEmail:success\");\r\n                                        // if given username does not exist yet\r\n                                        User newuser = new User(username, email, \"Normal\");\r\n                                        ref.child(\"Users\").child(mAuth.getUid()).setValue(newuser);\r\n\r\n                                        //Authentication complete message\r\n                                        Toast.makeText(RegisterActivity.this, \"Authentication completed.\",\r\n                                                Toast.LENGTH_SHORT).show();\r\n\r\n                                        //Go back to Login Screen\r\n                                        Intent intent = new Intent(RegisterActivity.this, MainActivity.class); // start ResultActivity\r\n                                        startActivityForResult(intent, 1);\r\n\r\n                                    } else {\r\n\r\n                                        try\r\n                                        {\r\n                                            throw task.getException();\r\n                                        }\r\n                                        catch (FirebaseAuthUserCollisionException existEmail) //If the given email is already registered in the DB\r\n                                        {\r\n                                            Log.d(TAG, \"onComplete: exist_email\");\r\n                                            Toast.makeText(RegisterActivity.this, \"Email is already in use. Try another one\",\r\n                                                    Toast.LENGTH_SHORT).show();\r\n                                            // TODO: Take your action\r\n                                        }\r\n                                        catch (Exception e) // If sign up fails, display a message to the user.\r\n                                        {\r\n                                            Log.w(TAG, \"createUserWithEmail:failure\", task.getException());\r\n                                            Toast.makeText(RegisterActivity.this, \"Authentication failed. Try resetting your internet connection.\",\r\n                                                    Toast.LENGTH_SHORT).show();\r\n                                        }\r\n                                    }\r\n                                }\r\n                            });\r\n\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(DatabaseError databaseError) {\r\n                Toast.makeText(RegisterActivity.this, \"Error:\"+databaseError.getMessage()+\". Please try again\",\r\n                        Toast.LENGTH_SHORT).show();\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    //Function that stores user data in Firebase RealTimeDatabase, given from Google Sign-In method\r\n    public static void createNewAccountWithGoogle(String username, String email, FirebaseAuth mAuth){\r\n\r\n        DatabaseReference ref = FirebaseDatabase.getInstance().getReference();\r\n        User newUser = new User(username, email, \"Normal\");\r\n        ref.child(\"Users\").child(mAuth.getUid()).setValue(newUser);\r\n\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/habemusfesta/RegisterActivity.java	(revision f64484c6e37e528f49dad55db4d9b06a000cac8c)
+++ app/src/main/java/com/example/habemusfesta/RegisterActivity.java	(date 1620313119630)
@@ -156,11 +156,9 @@
 
     //Function that stores user data in Firebase RealTimeDatabase, given from Google Sign-In method
     public static void createNewAccountWithGoogle(String username, String email, FirebaseAuth mAuth){
-
         DatabaseReference ref = FirebaseDatabase.getInstance().getReference();
         User newUser = new User(username, email, "Normal");
         ref.child("Users").child(mAuth.getUid()).setValue(newUser);
-
     }
 
 }
\ No newline at end of file
Index: app/src/main/java/com/example/habemusfesta/HomeUserLogin.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.habemusfesta;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\n\r\nimport com.facebook.AccessToken;\r\nimport com.facebook.FacebookSdk;\r\nimport com.facebook.login.LoginManager;\r\nimport com.google.android.gms.auth.api.Auth;\r\nimport com.google.android.gms.auth.api.signin.GoogleSignIn;\r\nimport com.google.android.gms.auth.api.signin.GoogleSignInClient;\r\nimport com.google.android.gms.auth.api.signin.GoogleSignInOptions;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\n\r\npublic class HomeUserLogin extends AppCompatActivity {\r\n\r\n    Button signOutBtn;\r\n    Button showProfileBtn;\r\n    Button showQRCodeBtn;\r\n    Button showEventsBtn;\r\n    Button scanBtn;\r\n    FirebaseAuth mAuth;\r\n    GoogleSignInClient mGoogleSignInClient;\r\n    GoogleSignInOptions mGoogleSignInOptions;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_home_user_login);\r\n\r\n        mAuth = FirebaseAuth.getInstance();\r\n        showProfileBtn = findViewById(R.id.showProfile);\r\n        showProfileBtn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent intent = new Intent (HomeUserLogin.this, UserInfo.class);\r\n                startActivityForResult(intent, 1);\r\n            }\r\n        });\r\n\r\n        signOutBtn = findViewById(R.id.signOut);\r\n        signOutBtn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                mGoogleSignInOptions = new GoogleSignInOptions.Builder(GoogleSignInOptions.DEFAULT_SIGN_IN)\r\n                        .requestEmail()\r\n                        .build();\r\n                mGoogleSignInClient = GoogleSignIn.getClient(HomeUserLogin.this, mGoogleSignInOptions);\r\n                signOut();\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    private void signOut(){\r\n        mAuth.signOut();\r\n        LoginManager.getInstance().logOut();\r\n        mGoogleSignInClient.signOut()\r\n                .addOnCompleteListener(this, new OnCompleteListener<Void>() {\r\n                    @Override\r\n                    public void onComplete(@NonNull Task<Void> task) {\r\n                        //Go back to Login Screen\r\n                        Intent intent = new Intent(HomeUserLogin.this, MainActivity.class); // start ResultActivity\r\n                        startActivityForResult(intent, 1);\r\n                    }\r\n                });\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/habemusfesta/HomeUserLogin.java	(revision f64484c6e37e528f49dad55db4d9b06a000cac8c)
+++ app/src/main/java/com/example/habemusfesta/HomeUserLogin.java	(date 1620316904230)
@@ -60,6 +60,8 @@
 
 
     private void signOut(){
+        Face.getSession().closeAndClearTokenInformation();
+
         mAuth.signOut();
         LoginManager.getInstance().logOut();
         mGoogleSignInClient.signOut()
