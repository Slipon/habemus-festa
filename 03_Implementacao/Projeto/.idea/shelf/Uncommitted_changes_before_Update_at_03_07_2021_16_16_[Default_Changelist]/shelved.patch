Index: app/src/main/java/com/example/habemusfesta/gps/GPSTracker.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.habemusfesta.gps;\r\n\r\nimport android.Manifest;\r\nimport android.app.Dialog;\r\nimport android.app.IntentService;\r\nimport android.content.Intent;\r\nimport android.content.pm.PackageManager;\r\nimport android.location.Address;\r\nimport android.location.Geocoder;\r\nimport android.location.Location;\r\nimport android.location.LocationManager;\r\nimport android.os.IBinder;\r\nimport android.util.Log;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.core.app.ActivityCompat;\r\n\r\nimport com.example.habemusfesta.events.Event;\r\nimport com.example.habemusfesta.events.EventUser;\r\nimport com.example.habemusfesta.users.HomeUserLogin;\r\nimport com.firebase.geofire.GeoFire;\r\nimport com.firebase.geofire.GeoLocation;\r\nimport com.firebase.geofire.GeoQuery;\r\nimport com.firebase.geofire.GeoQueryEventListener;\r\nimport com.google.android.gms.location.FusedLocationProviderClient;\r\nimport com.google.android.gms.location.LocationCallback;\r\nimport com.google.android.gms.location.LocationRequest;\r\nimport com.google.android.gms.location.LocationServices;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.firebase.FirebaseApp;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\n\r\nimport java.util.List;\r\n\r\npublic class GPSTracker extends IntentService {\r\n\r\n    private static final int PERMISSIONS_FINE_LOCATION = 99;\r\n\r\n    //Location request is a config file for all settings related to FusedLocationProviderClient\r\n    //Google's API for location services\r\n    private String user_id;\r\n    private FusedLocationProviderClient fusedLocationProviderClient;\r\n    private LocationRequest locationRequest;\r\n    private LocationCallback locationCallBack;\r\n    private Location currentLocation;\r\n    private String[] addresses;\r\n    private static String address;\r\n    private LocationManager locationManager;\r\n    private GeoFire geoFire;\r\n    private GeoQuery geoQuery;\r\n    private Dialog mDialog;\r\n    private int i = 1;\r\n    private DatabaseReference refEventosUsers;\r\n    private ValueEventListener valueEventListener;\r\n\r\n    public static volatile boolean shouldContinue = true;\r\n    public static volatile boolean scanning = false;\r\n\r\n\r\n    public GPSTracker() {\r\n        super(\"GPSTracker\");\r\n    }\r\n\r\n    @Override\r\n    public IBinder onBind(Intent intent) {\r\n        // TODO: Return the communication channel to the service.\r\n        throw new UnsupportedOperationException(\"Not yet implemented\");\r\n    }\r\n\r\n    @Override\r\n    protected void onHandleIntent(@Nullable Intent intent) {\r\n\r\n        shouldContinue = true;\r\n        locationManager = (LocationManager) getSystemService(LOCATION_SERVICE);\r\n        while(shouldContinue){\r\n            if(intent.getStringExtra(\"user_id\") != null){\r\n                user_id = intent.getStringExtra(\"user_id\");\r\n            }\r\n            try {\r\n                updateGPS(intent);\r\n                Thread.sleep(1000);\r\n            }catch(Exception e){e.getMessage();}\r\n        }\r\n    }\r\n\r\n    public static String getCurrentLocation(){\r\n        return address;\r\n    }\r\n\r\n    private void updateGPS(Intent intent){\r\n        // get permissions from the user to track GPS\r\n        // get the current location from the fused client\r\n        // update de UI - i.e. set all properties in their associated text view items\r\n\r\n        fusedLocationProviderClient = LocationServices.getFusedLocationProviderClient(GPSTracker.this);\r\n        if(locationManager.isProviderEnabled(LocationManager.GPS_PROVIDER) && ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION) == PackageManager.PERMISSION_GRANTED){ //CAN DO THIS? (!= NULL) ?!?\r\n            //user provided the permission\r\n            fusedLocationProviderClient.getLastLocation().addOnSuccessListener(new OnSuccessListener<Location>() {\r\n                @Override\r\n                public void onSuccess(Location location) {\r\n                    currentLocation = location;\r\n                    if (intent.getStringExtra(\"tracking_type\").equals(\"events_locs\")) {\r\n                        Intent myIntent = new Intent(HomeUserLogin.LOCATION_SUCCESS);\r\n                        myIntent.putExtra(\"user_location_lat\", currentLocation.getLatitude());\r\n                        myIntent.putExtra(\"user_location_lon\", currentLocation.getLongitude());\r\n\r\n                        sendBroadcast(myIntent);\r\n                        shouldContinue = false;\r\n                        return;\r\n                    }\r\n                    getAddress(intent);\r\n                }\r\n            });\r\n        }\r\n        else{\r\n            Log.d(\"GPS\",\"Unable to get street address: \");\r\n            if(scanning) {\r\n                Log.d(\"GPS\",\"GPS not active\");\r\n                shouldContinue = false;\r\n                scanning = false;\r\n                sendBroadcast(new Intent(HomeUserLogin.LOCATION_FAILED));\r\n                return;\r\n            }\r\n\r\n            /*\r\n            //user did not provided the permission\r\n            if(Build.VERSION.SDK_INT >= Build.VERSION_CODES.M){\r\n                requestPermissions(new String[]{Manifest.permission.ACCESS_FINE_LOCATION}, PERMISSIONS_FINE_LOCATION);\r\n            }\r\n\r\n            */\r\n        }\r\n    }\r\n\r\n    private void getAddress(Intent intent){\r\n        Geocoder geocoder = new Geocoder(GPSTracker.this);\r\n        try {\r\n            List<Address> addresses = geocoder.getFromLocation(currentLocation.getLatitude(), currentLocation.getLongitude(), 1);\r\n            address = addresses.get(0).getAddressLine(0);\r\n            Log.d(\"GPS\",addresses.get(0).getAddressLine(0));\r\n            getEventAddresses(intent);\r\n        } catch (Exception e) {\r\n            Log.d(\"GPS\",\"Unable to get addresses: \"+e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void getEventAddresses(Intent intent){\r\n\r\n        DatabaseReference ref = FirebaseDatabase.getInstance().getReference(\"Eventos-Locs\");\r\n        if(geoFire == null) {\r\n            geoFire = new GeoFire(ref);\r\n            //para efeitos de teste\r\n            geoFire.setLocation(\"-McxytY63dPv0gEAyK48\", new GeoLocation(currentLocation.getLatitude(), currentLocation.getLongitude()));\r\n        }\r\n\r\n        geoQuery = geoFire.queryAtLocation(new GeoLocation(currentLocation.getLatitude(), currentLocation.getLongitude()), 0.6f); //600m\r\n        geoQuery.addGeoQueryEventListener(new GeoQueryEventListener() {\r\n            @Override\r\n            public void onKeyEntered(String key, GeoLocation location) {\r\n\r\n                if (intent.getStringExtra(\"tracking_type\").equals(\"events_locs\")) {\r\n                    Intent myIntent = new Intent(HomeUserLogin.LOCATION_SUCCESS);\r\n                    myIntent.putExtra(\"user_location_lat\", currentLocation.getLatitude());\r\n                    myIntent.putExtra(\"user_location_lon\", currentLocation.getLongitude());\r\n\r\n                    sendBroadcast(myIntent);\r\n                    return;\r\n                }\r\n\r\n                FirebaseAuth mAuth = FirebaseAuth.getInstance();\r\n                refEventosUsers = FirebaseDatabase.getInstance().getReference().child(\"Eventos-Users\").child(key).child(mAuth.getUid());\r\n                valueEventListener = new ValueEventListener(){\r\n                    @Override\r\n                    public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                        if(shouldContinue) {\r\n                            if (snapshot.exists()) {\r\n                                if (intent.getStringExtra(\"tracking_type\").equals(\"qr_scan\")) {\r\n\r\n                                    Intent myIntent = new Intent(HomeUserLogin.LOCATION_SUCCESS);\r\n                                    myIntent.putExtra(\"user_id\", intent.getStringExtra(\"user_id\"));\r\n                                    myIntent.putExtra(\"friend_id\", intent.getStringExtra(\"friend_id\"));\r\n                                    myIntent.putExtra(\"event_id\", key);\r\n                                    sendBroadcast(myIntent);\r\n\r\n                                }\r\n                                shouldContinue = false;\r\n                                Log.d(\"GPS\", \"User already entered the event\");\r\n                            } else {\r\n                                FirebaseDatabase.getInstance().getReference(\"Eventos\").child(key).addListenerForSingleValueEvent(new ValueEventListener() {\r\n                                    @Override\r\n                                    public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                                        if (snapshot.exists()) {\r\n                                            Event e = snapshot.getValue(Event.class);\r\n                                            Log.d(\"GPS\", e.getNome());\r\n                                            showEventDialog(e);\r\n                                        }\r\n                                    }\r\n\r\n                                    @Override\r\n                                    public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                                    }\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    @Override\r\n                    public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                    }\r\n                };\r\n                refEventosUsers.addListenerForSingleValueEvent(valueEventListener);\r\n                System.out.println(String.format(\"Key %s entered the search area at [%f,%f]\", key, location.latitude, location.longitude));\r\n            }\r\n\r\n            @Override\r\n            public void onKeyExited(String key) {\r\n                System.out.println(String.format(\"Key %s is no longer in the search area\", key));\r\n            }\r\n\r\n            @Override\r\n            public void onKeyMoved(String key, GeoLocation location) {\r\n                System.out.println(String.format(\"Key %s moved within the search area to [%f,%f]\", key, location.latitude, location.longitude));\r\n            }\r\n\r\n            @Override\r\n            public void onGeoQueryReady() {\r\n                System.out.println(\"All initial data has been loaded and events have been fired!\");\r\n            }\r\n\r\n            @Override\r\n            public void onGeoQueryError(DatabaseError error) {\r\n                System.err.println(\"There was an error with this query: \" + error);\r\n            }\r\n        });\r\n    }\r\n\r\n    private void showEventDialog(Event e){\r\n        FirebaseApp.initializeApp(this);\r\n        FirebaseAuth mAuth = FirebaseAuth.getInstance();\r\n        DatabaseReference ref = FirebaseDatabase.getInstance().getReference();\r\n        while(i==1) {\r\n            ref.child(\"Eventos-Users\").child(e.getEvent_id()).child(mAuth.getUid()).setValue(1);\r\n            Toast.makeText(getApplicationContext(), \"Entered event!\", Toast.LENGTH_LONG).show();\r\n            i++;\r\n        }\r\n    }\r\n\r\n    //não deve estar a ser utilizado\r\n    private void handleEventConfirm(String user_id, String event_id){\r\n        EventUser eu = new EventUser(user_id, event_id);\r\n        DatabaseReference ref = FirebaseDatabase.getInstance().getReference();\r\n        ref.child(\"Eventos-Users\").child(\"-Mb1ntMYor2c8pqI2Cm7\").child(\"zTXBAt1aoFgLxSnmEXgmZaIcThY2\").setValue(1);\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/habemusfesta/gps/GPSTracker.java	(revision a9ac09efa935b2b2429ac07271e7ac5e90583c9b)
+++ app/src/main/java/com/example/habemusfesta/gps/GPSTracker.java	(date 1625150313611)
@@ -204,9 +204,7 @@
                                     }
 
                                     @Override
-                                    public void onCancelled(@NonNull DatabaseError error) {
-
-                                    }
+                                    public void onCancelled(@NonNull DatabaseError error) {}
                                 });
                             }
                         }
Index: app/src/main/java/com/example/habemusfesta/NearByEvents.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.habemusfesta;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.fragment.app.FragmentManager;\r\n\r\nimport android.content.BroadcastReceiver;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.content.IntentFilter;\r\nimport android.os.Bundle;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.Toast;\r\n\r\nimport com.example.habemusfesta.events.Event;\r\nimport com.example.habemusfesta.gps.GPSTracker;\r\nimport com.example.habemusfesta.gps.SearchMap;\r\nimport com.example.habemusfesta.users.HomeUserLogin;\r\nimport com.firebase.geofire.GeoFire;\r\nimport com.firebase.geofire.GeoLocation;\r\nimport com.firebase.geofire.GeoQuery;\r\nimport com.firebase.geofire.GeoQueryEventListener;\r\nimport com.google.android.gms.maps.CameraUpdateFactory;\r\nimport com.google.android.gms.maps.GoogleMap;\r\nimport com.google.android.gms.maps.OnMapReadyCallback;\r\nimport com.google.android.gms.maps.SupportMapFragment;\r\nimport com.google.android.gms.maps.model.LatLng;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\n\r\nimport java.util.HashMap;\r\n\r\npublic class NearByEvents extends Fragment {\r\n\r\n    private GoogleMap map;\r\n\r\n    private GeoFire geoFire;\r\n    private GeoQuery geoQuery;\r\n    private HashMap<String[], GeoLocation> events = new HashMap<>();\r\n    private Intent gpsTrackerServiceIntent;\r\n    BroadcastReceiver batchProcessReceiver;\r\n    private SearchMap searchMap;\r\n    private String currentTag;\r\n\r\n    public NearByEvents(String tag){ this.currentTag = tag; }\r\n\r\n    private OnMapReadyCallback callback = new OnMapReadyCallback() {\r\n\r\n        /**\r\n         * Manipulates the map once available.\r\n         * This callback is triggered when the map is ready to be used.\r\n         * This is where we can add markers or lines, add listeners or move the camera.\r\n         * In this case, we just add a marker near Sydney, Australia.\r\n         * If Google Play services is not installed on the device, the user will be prompted to\r\n         * install it inside the SupportMapFragment. This method will only be triggered once the\r\n         * user has installed Google Play services and returned to the app.\r\n         */\r\n        @Override\r\n        public void onMapReady(GoogleMap googleMap) {\r\n            map = googleMap;\r\n            //Move the camera to position\r\n            LatLng lisbon = new LatLng(38.736946, -9.142685);\r\n            map.moveCamera(CameraUpdateFactory.newLatLngZoom(lisbon, 10));\r\n        }\r\n    };\r\n\r\n    @Nullable\r\n    @Override\r\n    public View onCreateView(@NonNull LayoutInflater inflater,\r\n                             @Nullable ViewGroup container,\r\n                             @Nullable Bundle savedInstanceState) {\r\n        return inflater.inflate(R.layout.fragment_near_by_events, container, false);\r\n    }\r\n\r\n    @Override\r\n    public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {\r\n        super.onViewCreated(view, savedInstanceState);\r\n        SupportMapFragment mapFragment =\r\n                (SupportMapFragment) getChildFragmentManager().findFragmentById(R.id.map);\r\n        if (mapFragment != null) {\r\n            mapFragment.getMapAsync(callback);\r\n        }\r\n\r\n\r\n        gpsTrackerServiceIntent = new Intent(getActivity().getApplicationContext(), GPSTracker.class);\r\n        gpsTrackerServiceIntent.putExtra(\"tracking_type\",\"user_event\");\r\n\r\n        batchProcessReceiver = new BroadcastReceiver() {\r\n            @Override\r\n            public void onReceive(Context context, Intent intent) {\r\n                if (intent.getAction().equals(HomeUserLogin.LOCATION_SUCCESS)) {\r\n\r\n                    Double lat = intent.getDoubleExtra(\"user_location_lat\",0);\r\n                    Double lon = intent.getDoubleExtra(\"user_location_lon\",0);\r\n\r\n                    getNearestLocations(lat, lon);\r\n                }\r\n                if(intent.getAction().equals(HomeUserLogin.LOCATION_FAILED)){\r\n                    Toast.makeText(getContext(), \"Location not confirmed. Please turn on GPS.\", Toast.LENGTH_SHORT).show();\r\n                    gpsTrackerServiceIntent.putExtra(\"tracking_type\", \"user_event\");\r\n                    getActivity().startService(gpsTrackerServiceIntent);\r\n                }\r\n            }\r\n        };\r\n\r\n        callGPSTrackingService();\r\n\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onResume() {\r\n        super.onResume();\r\n\r\n        IntentFilter myIntentFilter = new IntentFilter();\r\n        myIntentFilter.addAction(HomeUserLogin.LOCATION_SUCCESS);\r\n        myIntentFilter.addAction(HomeUserLogin.LOCATION_FAILED);\r\n        getActivity().registerReceiver(batchProcessReceiver, myIntentFilter);\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onStop() {\r\n        super.onStop();\r\n        getActivity().unregisterReceiver(batchProcessReceiver);\r\n    }\r\n\r\n    public void changeFilter(String tag){\r\n        if(searchMap != null) {\r\n            this.currentTag = tag;\r\n            searchMap.hideMarkers(tag);\r\n        }\r\n    }\r\n\r\n    private void callGPSTrackingService(){\r\n        //Start GPS Tracking\r\n        gpsTrackerServiceIntent.putExtra(\"tracking_type\", \"events_locs\");\r\n\r\n        GPSTracker.shouldContinue = false;\r\n        GPSTracker.scanning = true;\r\n\r\n        getActivity().startService(gpsTrackerServiceIntent);\r\n    }\r\n    private void getNearestLocations(Double lat, Double lon){\r\n        DatabaseReference ref = FirebaseDatabase.getInstance().getReference(\"Eventos-Locs\");\r\n        geoFire = new GeoFire(ref);\r\n        geoQuery = geoFire.queryAtLocation(new GeoLocation(lat, lon), 0.6f); //600m\r\n        geoQuery.addGeoQueryEventListener(new GeoQueryEventListener() {\r\n            @Override\r\n            public void onKeyEntered(String key, GeoLocation location) {\r\n                DatabaseReference ref = FirebaseDatabase.getInstance().getReference();\r\n                ref.child(\"Eventos\").child(key).addListenerForSingleValueEvent(new ValueEventListener() {\r\n                    @Override\r\n                    public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                        if(snapshot.exists()){\r\n                            Event e = snapshot.getValue(Event.class);\r\n                            events.put(new String[]{key, e.getNome(), e.getEvent_type()}, location);\r\n                        }\r\n                    }\r\n\r\n                    @Override\r\n                    public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                    }\r\n                });\r\n                System.out.println(String.format(\"Key %s entered the search area at [%f,%f]\", key, location.latitude, location.longitude));\r\n            }\r\n\r\n            @Override\r\n            public void onKeyExited(String key) {\r\n                System.out.println(String.format(\"Key %s is no longer in the search area\", key));\r\n            }\r\n\r\n            @Override\r\n            public void onKeyMoved(String key, GeoLocation location) {\r\n                System.out.println(String.format(\"Key %s moved within the search area to [%f,%f]\", key, location.latitude, location.longitude));\r\n            }\r\n\r\n            @Override\r\n            public void onGeoQueryReady() {\r\n                searchMap = new SearchMap(true, currentTag, events);\r\n                FragmentManager fragmentManager = getParentFragmentManager();\r\n                fragmentManager.beginTransaction().replace(R.id.map, searchMap).commit();\r\n\r\n                System.out.println(\"All initial data has been loaded and events have been fired!\");\r\n            }\r\n\r\n            @Override\r\n            public void onGeoQueryError(DatabaseError error) {\r\n                System.err.println(\"There was an error with this query: \" + error);\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/habemusfesta/NearByEvents.java	(revision a9ac09efa935b2b2429ac07271e7ac5e90583c9b)
+++ app/src/main/java/com/example/habemusfesta/NearByEvents.java	(date 1625168481605)
@@ -147,6 +147,7 @@
 
         getActivity().startService(gpsTrackerServiceIntent);
     }
+
     private void getNearestLocations(Double lat, Double lon){
         DatabaseReference ref = FirebaseDatabase.getInstance().getReference("Eventos-Locs");
         geoFire = new GeoFire(ref);
Index: app/src/main/java/com/example/habemusfesta/TrendingEvents.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.habemusfesta;\r\n\r\nimport android.content.Context;\r\nimport android.os.Bundle;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.fragment.app.FragmentManager;\r\nimport androidx.recyclerview.widget.GridLayoutManager;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.Toast;\r\n\r\nimport com.example.habemusfesta.dummy.DummyContent;\r\nimport com.example.habemusfesta.events.Event;\r\nimport com.example.habemusfesta.gps.SearchMap;\r\nimport com.firebase.geofire.GeoFire;\r\nimport com.firebase.geofire.GeoLocation;\r\nimport com.firebase.geofire.GeoQuery;\r\nimport com.firebase.geofire.LocationCallback;\r\nimport com.google.android.gms.maps.CameraUpdateFactory;\r\nimport com.google.android.gms.maps.GoogleMap;\r\nimport com.google.android.gms.maps.OnMapReadyCallback;\r\nimport com.google.android.gms.maps.SupportMapFragment;\r\nimport com.google.android.gms.maps.model.LatLng;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\n\r\nimport java.util.HashMap;\r\n\r\n/**\r\n * A fragment representing a list of Items.\r\n */\r\npublic class TrendingEvents extends Fragment {\r\n\r\n    private GoogleMap map;\r\n    private HashMap<String[], GeoLocation> events = new HashMap<>();\r\n    private GeoFire geoFire;\r\n    private Long count = 0L;\r\n    private Long events_size = 0L;\r\n    private SearchMap searchMap;\r\n    private String currentTag;\r\n\r\n    public TrendingEvents(String tag){ this.currentTag = tag; }\r\n\r\n    private OnMapReadyCallback callback = new OnMapReadyCallback() {\r\n\r\n        /**\r\n         * Manipulates the map once available.\r\n         * This callback is triggered when the map is ready to be used.\r\n         * This is where we can add markers or lines, add listeners or move the camera.\r\n         * In this case, we just add a marker near Sydney, Australia.\r\n         * If Google Play services is not installed on the device, the user will be prompted to\r\n         * install it inside the SupportMapFragment. This method will only be triggered once the\r\n         * user has installed Google Play services and returned to the app.\r\n         */\r\n        @Override\r\n        public void onMapReady(GoogleMap googleMap) {\r\n            map = googleMap;\r\n            //Move the camera to position\r\n            LatLng lisbon = new LatLng(38.736946, -9.142685);\r\n            map.moveCamera(CameraUpdateFactory.newLatLngZoom(lisbon, 10));\r\n        }\r\n    };\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        View view = inflater.inflate(R.layout.fragment_trending_events, container, false);\r\n        return view;\r\n    }\r\n\r\n    @Override\r\n    public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {\r\n        super.onViewCreated(view, savedInstanceState);\r\n        SupportMapFragment mapFragment =\r\n                (SupportMapFragment) getChildFragmentManager().findFragmentById(R.id.map_2);\r\n        if (mapFragment != null) {\r\n            mapFragment.getMapAsync(callback);\r\n        }\r\n        getTrendingEvents();\r\n    }\r\n\r\n    public void changeFilter(String tag){\r\n        this.currentTag = tag;\r\n        searchMap.hideMarkers(tag);\r\n    }\r\n\r\n    private void getTrendingEvents() { //its going to select the top 10 most voted events\r\n        DatabaseReference ref = FirebaseDatabase.getInstance().getReference();\r\n        ref.child(\"Eventos\").orderByChild(\"likes\").limitToLast(10).addListenerForSingleValueEvent(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                if (snapshot.exists()) {\r\n                    events_size = snapshot.getChildrenCount();\r\n                    for (DataSnapshot child : snapshot.getChildren()) {\r\n                        Event e = child.getValue(Event.class);\r\n                        geoFire = new GeoFire(ref.child(\"Eventos-Locs\"));\r\n                        LocationCallback locationCallback = new LocationCallback() {\r\n                            @Override\r\n                            public void onLocationResult(String key, GeoLocation location) {\r\n                                events.put(new String[]{key, e.getNome(), e.getEvent_type()}, location);\r\n                                count++;\r\n                                if(count == events_size){\r\n                                    count = 0L;\r\n                                    searchMap = new SearchMap(true, currentTag, events);\r\n                                    FragmentManager fragmentManager = getParentFragmentManager();\r\n                                    fragmentManager.beginTransaction().replace(R.id.map_2, searchMap).commit();\r\n                                }\r\n                            }\r\n\r\n                            @Override\r\n                            public void onCancelled(DatabaseError databaseError) {\r\n                                Toast.makeText(getActivity().getApplicationContext(), \"Error: location not found.\", Toast.LENGTH_SHORT);\r\n                            }\r\n                        };\r\n                        geoFire.getLocation(e.getEvent_id(), locationCallback);\r\n                    }\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {}\r\n        });\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/habemusfesta/TrendingEvents.java	(revision a9ac09efa935b2b2429ac07271e7ac5e90583c9b)
+++ app/src/main/java/com/example/habemusfesta/TrendingEvents.java	(date 1625150563666)
@@ -90,8 +90,10 @@
     }
 
     public void changeFilter(String tag){
-        this.currentTag = tag;
-        searchMap.hideMarkers(tag);
+        if(searchMap != null) {
+            this.currentTag = tag;
+            searchMap.hideMarkers(tag);
+        }
     }
 
     private void getTrendingEvents() { //its going to select the top 10 most voted events
Index: app/src/main/java/com/example/habemusfesta/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.habemusfesta;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.RequiresApi;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport android.app.ActivityManager;\r\nimport android.app.AlertDialog;\r\nimport android.content.Context;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.location.LocationManager;\r\nimport android.net.ConnectivityManager;\r\nimport android.net.NetworkInfo;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.provider.Settings;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.ImageButton;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport com.example.habemusfesta.users.HomeAdminLogin;\r\nimport com.example.habemusfesta.users.HomeUserLogin;\r\nimport com.example.habemusfesta.users.User;\r\nimport com.example.habemusfesta.gps.GPSTracker;\r\nimport com.example.habemusfesta.utils.SettingsActivity;\r\nimport com.example.habemusfesta.utils.Utils;\r\nimport com.google.android.gms.auth.api.signin.GoogleSignIn;\r\nimport com.google.android.gms.auth.api.signin.GoogleSignInAccount;\r\nimport com.google.android.gms.auth.api.signin.GoogleSignInClient;\r\nimport com.google.android.gms.auth.api.signin.GoogleSignInOptions;\r\nimport com.google.android.gms.common.SignInButton;\r\nimport com.google.android.gms.common.api.ApiException;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.auth.AuthCredential;\r\nimport com.google.firebase.auth.AuthResult;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.GoogleAuthProvider;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\n\r\nimport java.util.HashMap;\r\n\r\npublic class MainActivity extends AppCompatActivity {\r\n\r\n    public static final int REGISTER_REQUEST = 1;\r\n    public static final int NORMAL_LOGIN_REQUEST = 2;\r\n    public static final int GOOGLE_LOGIN_REQUEST = 3;\r\n    private FirebaseAuth mAuth;\r\n\r\n    private String TAG = \"LOGIN: \";\r\n    private TextView inputUsernameEmail;\r\n    private TextView inputPassword;\r\n    private Button loginBtn;\r\n    private SignInButton googleSignBtn;\r\n    private TextView txtRegister;\r\n    private ImageButton imgBtn_settings;\r\n    private ImageButton imgBtn_location; //FOR TEST ONLY -> DELETE AFTER\r\n\r\n    private GoogleSignInOptions mGoogleSignInOptions;\r\n    private GoogleSignInClient mGoogleSignInClient;\r\n    private GoogleSignInAccount mGoogleSignInAccount;\r\n\r\n    @RequiresApi(api = Build.VERSION_CODES.O)\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n\r\n        imgBtn_settings = findViewById(R.id.imgBtn_settings);\r\n        imgBtn_settings.setOnClickListener(new View.OnClickListener(){\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent intent = new Intent(MainActivity.this, SettingsActivity.class);\r\n                startActivity(intent);\r\n            }\r\n        });\r\n\r\n        // ------------------  FOR TEST ONLY -> DELETE AFTER  ----------------\r\n        /*\r\n        imgBtn_location = findViewById(R.id.imgBtn_location);\r\n        imgBtn_location.setOnClickListener(new View.OnClickListener(){\r\n            @RequiresApi(api = Build.VERSION_CODES.M)\r\n            @Override\r\n            public void onClick(View v) {\r\n                if(locationEnabled()){\r\n                    Intent intent = new Intent(MainActivity.this, GPS_Main.class);\r\n                    startActivity(intent);\r\n                }\r\n            }\r\n        });\r\n         */\r\n\r\n        //Google Sign-In\r\n        mGoogleSignInOptions = new GoogleSignInOptions.Builder(GoogleSignInOptions.DEFAULT_SIGN_IN)\r\n                .requestIdToken(getString(R.string.google_web_client_id))\r\n                .requestEmail()\r\n                .build();\r\n        mGoogleSignInClient = GoogleSignIn.getClient(this, mGoogleSignInOptions);\r\n\r\n        //Normal Sign-In\r\n        mAuth = FirebaseAuth.getInstance();\r\n        inputUsernameEmail = findViewById(R.id.inputUsername);\r\n        inputPassword = findViewById(R.id.inputPassword);\r\n\r\n        loginBtn = findViewById(R.id.loginBtn);\r\n        loginBtn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                if(!Utils.isConnected){\r\n                    Toast.makeText(MainActivity.this, \"Please turn on an internet connection.\",\r\n                            Toast.LENGTH_SHORT).show();\r\n                    return;\r\n                }\r\n\r\n                if( inputUsernameEmail.getText().toString().length() == 0 || inputPassword.getText().toString().length() == 0 ){\r\n                    Toast.makeText(MainActivity.this, \"Error: username/email or password missing.\", Toast.LENGTH_SHORT).show();\r\n                }else {\r\n                    loginBtn.setClickable(false);\r\n                    checkAuthenticationEntry(inputUsernameEmail.getText().toString(), inputPassword.getText().toString());\r\n                }\r\n            }\r\n        });\r\n\r\n        googleSignBtn = findViewById(R.id.googleSign);\r\n        googleSignBtn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                if(!Utils.isConnected){\r\n                    Toast.makeText(MainActivity.this, \"Please turn on an internet connection.\",\r\n                            Toast.LENGTH_SHORT).show();\r\n                    return;\r\n                }\r\n\r\n                startActivitySignWithGoogle();\r\n            }\r\n        });\r\n\r\n        txtRegister = findViewById(R.id.txtRegister);\r\n        txtRegister.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                txtRegister.setClickable(false);\r\n                Intent intent = new Intent(MainActivity.this, RegisterActivity.class); // start ResultActivity\r\n                startActivityForResult(intent, REGISTER_REQUEST);\r\n            }\r\n        });\r\n\r\n        Utils.checkInternetConnection();\r\n\r\n    }\r\n\r\n    @Override\r\n    protected void onStart() {\r\n        super.onStart();\r\n    }\r\n\r\n    //Verify network and location\r\n    @RequiresApi(api = Build.VERSION_CODES.M)\r\n    private boolean locationEnabled(){\r\n        LocationManager lm = (LocationManager)getSystemService(Context.LOCATION_SERVICE ) ;\r\n        ConnectivityManager connectivityManager = (ConnectivityManager)getSystemService(Context.CONNECTIVITY_SERVICE);\r\n        boolean gps_enabled = false;\r\n        boolean network_enabled = false;\r\n        try {\r\n            gps_enabled = lm.isProviderEnabled(LocationManager. GPS_PROVIDER ) ;\r\n        } catch (Exception e) {\r\n            e.printStackTrace() ;\r\n        }\r\n        if (!(connectivityManager.getNetworkInfo(ConnectivityManager.TYPE_MOBILE).getState() == NetworkInfo.State.CONNECTED ||\r\n                connectivityManager.getNetworkInfo(ConnectivityManager.TYPE_WIFI).getState() == NetworkInfo.State.CONNECTED)) {\r\n            new AlertDialog.Builder(MainActivity. this )\r\n                    .setMessage( \"Serviço de internet inativo\" )\r\n                    .setPositiveButton( \"Settings\" , new\r\n                            DialogInterface.OnClickListener() {\r\n                                @Override\r\n                                public void onClick (DialogInterface paramDialogInterface , int paramInt) {\r\n                                    startActivity( new Intent(Settings. ACTION_NETWORK_OPERATOR_SETTINGS )) ;\r\n                                }\r\n                            })\r\n                    .setNegativeButton( \"Cancel\" , null )\r\n                    .show() ;\r\n            return false;\r\n        }\r\n\r\n        if (!gps_enabled) {\r\n            new AlertDialog.Builder(MainActivity. this )\r\n                    .setMessage( \"Serviço de localização inativo\" )\r\n                    .setPositiveButton( \"Settings\" , new\r\n                            DialogInterface.OnClickListener() {\r\n                                @Override\r\n                                public void onClick (DialogInterface paramDialogInterface , int paramInt) {\r\n                                    startActivity( new Intent(Settings. ACTION_LOCATION_SOURCE_SETTINGS )) ;\r\n                                }\r\n                            })\r\n                    .setNegativeButton( \"Cancel\" , null )\r\n                    .show() ;\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    private void checkAuthenticationEntry(String usernameOrEmail, String password){ //checks if authentication entry is an username or an email, then proceeds to call signInUser method\r\n        if(android.util.Patterns.EMAIL_ADDRESS.matcher(usernameOrEmail).matches()){ //if given entry is an emai\r\n            checkIfAccountIsLinkedWithEmail(usernameOrEmail.toLowerCase(), password);\r\n        }else {// if its a user, check the Firebase RealTimeDatabase to see if its a valid one\r\n            DatabaseReference ref = FirebaseDatabase.getInstance().getReference();\r\n            ref.child(\"Users\").orderByChild(\"username\").equalTo(usernameOrEmail.toLowerCase()).addListenerForSingleValueEvent(new ValueEventListener() {\r\n                @Override\r\n                public void onDataChange(DataSnapshot dataSnapshot) {\r\n                    if (dataSnapshot.exists()) {\r\n                        // if given username exists\r\n                        HashMap dS = (HashMap)(dataSnapshot.getValue());\r\n                        String uid = dS.keySet().toArray()[0].toString();\r\n                        User u = dataSnapshot.child(uid).getValue(User.class);\r\n                        if(u.getEmail()!=null && !u.getEmail().equals(\"\")) {\r\n                            signInUser(u.getEmail(), password);\r\n                        }else{\r\n                            Toast.makeText(MainActivity.this, \"Error: No email attached in the DB. Please contact support.\",\r\n                                    Toast.LENGTH_SHORT).show();\r\n                            loginBtn.setClickable(true);\r\n                            return;\r\n                        }\r\n                    } else {\r\n                        Toast.makeText(MainActivity.this, \"Error: Invalid username. Please try again.\",\r\n                                Toast.LENGTH_SHORT).show();\r\n                        loginBtn.setClickable(true);\r\n                        return;\r\n                    }\r\n                }\r\n\r\n                @Override\r\n                public void onCancelled(@NonNull DatabaseError databaseError) {\r\n                    Toast.makeText(MainActivity.this, \"Error. Please try again.\",\r\n                            Toast.LENGTH_SHORT).show();\r\n                    return;\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    private void signInUser(String email, String password){\r\n        mAuth.signInWithEmailAndPassword(email, password)\r\n                .addOnCompleteListener(this, new OnCompleteListener<AuthResult>() {\r\n                    @Override\r\n                    public void onComplete(@NonNull Task<AuthResult> task) {\r\n                        if (task.isSuccessful()) {\r\n                            // Sign in success\r\n                            Log.d(TAG, \"signInWithEmail:success\");\r\n\r\n                            //Check if its a normal user or an employer\r\n                            DatabaseReference ref = FirebaseDatabase.getInstance().getReference();\r\n                            ref.child(\"Users\").orderByChild(\"email\").equalTo(email).addListenerForSingleValueEvent(new ValueEventListener() {\r\n                                @Override\r\n                                public void onDataChange(DataSnapshot dataSnapshot) {\r\n                                    if(dataSnapshot.exists()) {\r\n                                        HashMap dS = (HashMap)(dataSnapshot.getValue());\r\n                                        String uid = dS.keySet().toArray()[0].toString();\r\n                                        System.out.println(dataSnapshot.child(uid).getValue().getClass().getName());\r\n                                        User u = dataSnapshot.child(uid).getValue(User.class);\r\n\r\n                                        String user_type = u.getUser_type();\r\n\r\n                                        Intent intent;\r\n                                        if (user_type.equals(\"Normal\")) { //If its a normal user\r\n                                            intent = new Intent(MainActivity.this, HomeUserLogin.class); // start ResultActivity\r\n                                        } else if (user_type.equals(\"Admin\")) { //if its an admin\r\n                                            intent = new Intent(MainActivity.this, HomeAdminLogin.class); // start ResultActivity\r\n                                        } else {\r\n                                            Toast.makeText(MainActivity.this, \"Error: User not found.\", Toast.LENGTH_SHORT).show();\r\n                                            loginBtn.setClickable(true);\r\n                                            return;\r\n                                        }\r\n\r\n                                        intent.putExtra(\"user_id\", uid);\r\n                                        intent.putExtra(\"username\", u.getUsername());\r\n                                        startActivityForResult(intent, NORMAL_LOGIN_REQUEST);\r\n                                    }else {\r\n                                        Toast.makeText(MainActivity.this, \"Error: User not found.\", Toast.LENGTH_SHORT).show();\r\n                                        loginBtn.setClickable(true);\r\n                                        return;\r\n                                    }\r\n                                }\r\n\r\n                                @Override\r\n                                public void onCancelled(@NonNull DatabaseError databaseError) {\r\n                                    Toast.makeText(MainActivity.this, \"Authentication failed.\", Toast.LENGTH_SHORT).show();\r\n                                    loginBtn.setClickable(true);\r\n                                }\r\n                            });\r\n                        } else {\r\n                            // If sign in fails, display a message to the user.\r\n                            Log.w(TAG, \"signInWithEmail:failure\", task.getException());\r\n                            Toast.makeText(MainActivity.this, \"Authentication failed.\", Toast.LENGTH_SHORT).show();\r\n                            loginBtn.setClickable(true);\r\n                        }\r\n                    }\r\n                });\r\n    }\r\n\r\n    private void startActivitySignWithGoogle() {\r\n        Intent signInIntent = mGoogleSignInClient.getSignInIntent();\r\n        startActivityForResult(signInIntent, GOOGLE_LOGIN_REQUEST);\r\n    }\r\n\r\n    @Override\r\n    public void onActivityResult(int requestCode, int resultCode, Intent data) {\r\n        //mCallbackManager.onActivityResult(requestCode, resultCode, data);\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n\r\n        // Result returned from launching the Intent from GoogleSignInClient.getSignInIntent(...);\r\n        if (requestCode == GOOGLE_LOGIN_REQUEST) {\r\n            // The Task returned from this call is always completed, no need to attach\r\n            // a listener.\r\n            Task<GoogleSignInAccount> task = GoogleSignIn.getSignedInAccountFromIntent(data);\r\n            try{\r\n                GoogleSignInAccount account = task.getResult(ApiException.class);\r\n                checkIfAccountIsLinkedWithGoogle(account);\r\n            } catch (ApiException e) {\r\n                // The ApiException status code indicates the detailed failure reason.\r\n                // Please refer to the GoogleSignInStatusCodes class reference for more information.\r\n                Log.w(TAG, \"signInResult:failed code=\" + e.getStatusCode());\r\n                //Toast.makeText(MainActivity.this, \"Authentication failed. Try again.\", Toast.LENGTH_SHORT).show();\r\n            }\r\n        }\r\n    }\r\n\r\n    private void signInWithGoogle(String idToken) {\r\n        //Get idToken from GoogleSignInAccount and create a credential\r\n        AuthCredential credential = GoogleAuthProvider.getCredential(idToken, null);\r\n\r\n        mAuth.signInWithCredential(credential)\r\n                .addOnCompleteListener(this, new OnCompleteListener<AuthResult>() {\r\n                    @Override\r\n                    public void onComplete(@NonNull Task<AuthResult> task) {\r\n                        if (task.isSuccessful()) {\r\n                            // Sign in success, update UI with the signed-in user's information\r\n                            Log.d(TAG, \"signInWithCredential:success\");\r\n\r\n                            mGoogleSignInAccount = GoogleSignIn.getLastSignedInAccount(MainActivity.this);\r\n                            // Signed in successfully, show authenticated UI.\r\n                            String email = mGoogleSignInAccount.getEmail();\r\n\r\n                            //Check if its a normal user or an employer\r\n                            DatabaseReference ref = FirebaseDatabase.getInstance().getReference();\r\n                            ref.child(\"Users\").orderByChild(\"email\").equalTo(email).addListenerForSingleValueEvent(new ValueEventListener() {\r\n                                @Override\r\n                                public void onDataChange(DataSnapshot dataSnapshot) {\r\n                                    if(dataSnapshot.exists()) {\r\n                                        HashMap dS = (HashMap)(dataSnapshot.getValue());\r\n                                        String uid = dS.keySet().toArray()[0].toString();\r\n                                        User u = dataSnapshot.child(uid).getValue(User.class);\r\n                                        String user_type = u.getUser_type();\r\n\r\n                                        Intent intent;\r\n                                        if (user_type.equals(\"Normal\")) { //If its a normal user\r\n                                            intent = new Intent(MainActivity.this, HomeUserLogin.class); // start ResultActivity\r\n                                        } else if (user_type.equals(\"Admin\")) { //if its an admin\r\n                                            intent = new Intent(MainActivity.this, HomeAdminLogin.class); // start ResultActivity\r\n                                        } else {\r\n                                            Toast.makeText(MainActivity.this, \"Error: User not found.\", Toast.LENGTH_SHORT).show();\r\n                                            return;\r\n                                        }\r\n\r\n                                        intent.putExtra(\"user_id\", uid);\r\n                                        intent.putExtra(\"username\", u.getUsername());\r\n\r\n                                        startActivityForResult(intent, GOOGLE_LOGIN_REQUEST);\r\n                                    }else {\r\n                                        //Create User\r\n                                        String name = mGoogleSignInAccount.getDisplayName();\r\n                                        RegisterActivity.createNewAccountWithGoogle(name, email, mAuth);\r\n\r\n                                        Intent intent = new Intent(MainActivity.this, HomeUserLogin.class);\r\n                                        intent.putExtra(\"user_id\", mAuth.getUid());\r\n\r\n                                        startActivityForResult(intent, GOOGLE_LOGIN_REQUEST);\r\n                                    }\r\n                                }\r\n                                @Override\r\n                                public void onCancelled(@NonNull DatabaseError databaseError) {\r\n                                    Toast.makeText(MainActivity.this, \"Authentication failed.\", Toast.LENGTH_SHORT).show();\r\n                                }\r\n                            });\r\n                        } else {\r\n                            // If sign in fails, display a message to the user.\r\n                            Log.w(TAG, \"signInWithCredential:failure\", task.getException());\r\n                        }\r\n                    }\r\n                });\r\n    }\r\n\r\n    private void checkIfAccountIsLinkedWithGoogle(GoogleSignInAccount account){\r\n        String email = account.getEmail();\r\n        DatabaseReference ref = FirebaseDatabase.getInstance().getReference();\r\n        ref.child(\"Users\").orderByChild(\"email\").equalTo(email).addListenerForSingleValueEvent(new ValueEventListener() {\r\n\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                if(snapshot.exists()){\r\n                    HashMap dS = (HashMap)(snapshot.getValue());\r\n                    String uid = dS.keySet().toArray()[0].toString();\r\n                    User u = snapshot.child(uid).getValue(User.class);\r\n                    if(u.getGoogle_auth() == 1){\r\n                        String idToken = account.getIdToken();\r\n                        signInWithGoogle(idToken);\r\n                    }else {\r\n                        Toast.makeText(MainActivity.this, \"Error: Account not linked to this provider. Log in to link account.\",\r\n                                Toast.LENGTH_SHORT).show();\r\n                        return;\r\n                    }\r\n                }else{\r\n                    String idToken = account.getIdToken();\r\n                    signInWithGoogle(idToken);\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n                Toast.makeText(MainActivity.this, \"Error: Event not found. Please try again.\",\r\n                        Toast.LENGTH_SHORT).show();\r\n            }\r\n        });\r\n    }\r\n\r\n    private void checkIfAccountIsLinkedWithEmail(String email, String password){\r\n\r\n        DatabaseReference ref = FirebaseDatabase.getInstance().getReference();\r\n        ref.child(\"Users\").orderByChild(\"email\").equalTo(email).addListenerForSingleValueEvent(new ValueEventListener() {\r\n\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                if(snapshot.exists()){\r\n                    HashMap dS = (HashMap)(snapshot.getValue());\r\n                    String uid = dS.keySet().toArray()[0].toString();\r\n                    User u = snapshot.child(uid).getValue(User.class);\r\n                    if(u.getNormal_auth() == 1){\r\n                        signInUser(email, password);\r\n                    }else {\r\n                        Toast.makeText(MainActivity.this, \"Error: Account not linked to this provider. Log in to link account.\",\r\n                                Toast.LENGTH_SHORT).show();\r\n                        loginBtn.setClickable(true);\r\n                        return;\r\n                    }\r\n                }else{\r\n                    Toast.makeText(MainActivity.this, \"Error: Account is not registered.\",\r\n                            Toast.LENGTH_SHORT).show();\r\n                    loginBtn.setClickable(true);\r\n                    return;\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n                Toast.makeText(MainActivity.this, \"Action Cancelled: Please try again.\",\r\n                        Toast.LENGTH_SHORT).show();\r\n                loginBtn.setClickable(true);\r\n            }\r\n        });\r\n    }\r\n\r\n    private boolean isMyServiceRunning(Class<?> serviceClass) {\r\n        ActivityManager manager = (ActivityManager) getSystemService(Context.ACTIVITY_SERVICE);\r\n        for (ActivityManager.RunningServiceInfo service : manager.getRunningServices(Integer.MAX_VALUE)) {\r\n            if (serviceClass.getName().equals(service.service.getClassName())) {\r\n                System.out.println(GPSTracker.getCurrentLocation());\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/habemusfesta/MainActivity.java	(revision a9ac09efa935b2b2429ac07271e7ac5e90583c9b)
+++ app/src/main/java/com/example/habemusfesta/MainActivity.java	(date 1625149798788)
@@ -149,7 +149,7 @@
             public void onClick(View v) {
                 txtRegister.setClickable(false);
                 Intent intent = new Intent(MainActivity.this, RegisterActivity.class); // start ResultActivity
-                startActivityForResult(intent, REGISTER_REQUEST);
+                startActivity(intent);
             }
         });
 
@@ -162,6 +162,13 @@
         super.onStart();
     }
 
+    @Override
+    protected void onResume() {
+        super.onResume();
+        loginBtn.setClickable(true);
+        txtRegister.setClickable(true);
+    }
+
     //Verify network and location
     @RequiresApi(api = Build.VERSION_CODES.M)
     private boolean locationEnabled(){
Index: app/src/main/java/com/example/habemusfesta/MyEvents.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.habemusfesta;\r\n\r\nimport android.content.Context;\r\nimport android.os.Bundle;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.fragment.app.FragmentManager;\r\nimport androidx.recyclerview.widget.GridLayoutManager;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.Toast;\r\n\r\nimport com.example.habemusfesta.dummy.DummyContent;\r\nimport com.example.habemusfesta.events.Event;\r\nimport com.example.habemusfesta.gps.SearchMap;\r\nimport com.firebase.geofire.GeoFire;\r\nimport com.firebase.geofire.GeoLocation;\r\nimport com.firebase.geofire.LocationCallback;\r\nimport com.google.android.gms.maps.CameraUpdateFactory;\r\nimport com.google.android.gms.maps.GoogleMap;\r\nimport com.google.android.gms.maps.OnMapReadyCallback;\r\nimport com.google.android.gms.maps.SupportMapFragment;\r\nimport com.google.android.gms.maps.model.LatLng;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\n\r\nimport java.util.HashMap;\r\n\r\n/**\r\n * A fragment representing a list of Items.\r\n */\r\npublic class MyEvents extends Fragment {\r\n\r\n    private GoogleMap map;\r\n    private HashMap<String[], GeoLocation> events = new HashMap<>();\r\n    private GeoFire geoFire;\r\n    private Long count = 0L;\r\n    private Long events_size = 0L;\r\n    private FirebaseAuth mAuth;\r\n    private SearchMap searchMap;\r\n    private String currentTag;\r\n\r\n    public MyEvents(String tag){ this.currentTag = tag; }\r\n\r\n\r\n    private OnMapReadyCallback callback = new OnMapReadyCallback() {\r\n\r\n        /**\r\n         * Manipulates the map once available.\r\n         * This callback is triggered when the map is ready to be used.\r\n         * This is where we can add markers or lines, add listeners or move the camera.\r\n         * In this case, we just add a marker near Sydney, Australia.\r\n         * If Google Play services is not installed on the device, the user will be prompted to\r\n         * install it inside the SupportMapFragment. This method will only be triggered once the\r\n         * user has installed Google Play services and returned to the app.\r\n         */\r\n        @Override\r\n        public void onMapReady(GoogleMap googleMap) {\r\n            map = googleMap;\r\n            //Move the camera to position\r\n            LatLng lisbon = new LatLng(38.736946, -9.142685);\r\n            map.moveCamera(CameraUpdateFactory.newLatLngZoom(lisbon, 10));\r\n        }\r\n    };\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        View view = inflater.inflate(R.layout.fragment_my_events, container, false);\r\n        return view;\r\n    }\r\n\r\n    @Override\r\n    public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {\r\n        super.onViewCreated(view, savedInstanceState);\r\n        SupportMapFragment mapFragment =\r\n                (SupportMapFragment) getChildFragmentManager().findFragmentById(R.id.map_4);\r\n        if (mapFragment != null) {\r\n            mapFragment.getMapAsync(callback);\r\n        }\r\n        mAuth = FirebaseAuth.getInstance();\r\n        getMyEvents();\r\n    }\r\n\r\n\r\n    public void changeFilter(String tag){\r\n        this.currentTag = tag;\r\n        searchMap.hideMarkers(tag);\r\n    }\r\n\r\n    private void getMyEvents() { //its going to select the top 10 most voted events\r\n        DatabaseReference ref = FirebaseDatabase.getInstance().getReference();\r\n        ref.child(\"Eventos-Users\").orderByChild(mAuth.getUid()).addListenerForSingleValueEvent(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                if(snapshot.exists()){\r\n                    events_size = snapshot.getChildrenCount();\r\n                    for (DataSnapshot child : snapshot.getChildren()) {\r\n                        ref.child(\"Eventos\").child(child.getKey()).addListenerForSingleValueEvent(new ValueEventListener() {\r\n                            @Override\r\n                            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                                if (snapshot.exists()) {\r\n                                    Event e = snapshot.getValue(Event.class);\r\n                                    geoFire = new GeoFire(ref.child(\"Eventos-Locs\"));\r\n                                    LocationCallback locationCallback = new LocationCallback() {\r\n                                        @Override\r\n                                        public void onLocationResult(String key, GeoLocation location) {\r\n                                            events.put(new String[]{key,e.getNome(), e.getEvent_type()}, location);\r\n                                            count++;\r\n                                            if(count == events_size){\r\n                                                count = 0L;\r\n                                                searchMap = new SearchMap(true, currentTag, events);\r\n                                                FragmentManager fragmentManager = getParentFragmentManager();\r\n                                                fragmentManager.beginTransaction().replace(R.id.map_4, searchMap).commit();\r\n                                            }\r\n                                        }\r\n                                        @Override\r\n                                        public void onCancelled(DatabaseError databaseError) {\r\n                                            Toast.makeText(getActivity().getApplicationContext(), \"Error: location not found.\", Toast.LENGTH_SHORT);\r\n                                        }\r\n                                    };\r\n                                    geoFire.getLocation(e.getEvent_id(), locationCallback);\r\n                                }\r\n                            }\r\n                            @Override\r\n                            public void onCancelled(@NonNull DatabaseError error) {}\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {}\r\n        });\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/habemusfesta/MyEvents.java	(revision a9ac09efa935b2b2429ac07271e7ac5e90583c9b)
+++ app/src/main/java/com/example/habemusfesta/MyEvents.java	(date 1625150931746)
@@ -35,6 +35,7 @@
 import com.google.firebase.database.ValueEventListener;
 
 import java.util.HashMap;
+import java.util.Map;
 
 /**
  * A fragment representing a list of Items.
@@ -94,47 +95,56 @@
 
 
     public void changeFilter(String tag){
-        this.currentTag = tag;
-        searchMap.hideMarkers(tag);
+        if(searchMap != null) {
+            this.currentTag = tag;
+            searchMap.hideMarkers(tag);
+        }
     }
 
     private void getMyEvents() { //its going to select the top 10 most voted events
         DatabaseReference ref = FirebaseDatabase.getInstance().getReference();
-        ref.child("Eventos-Users").orderByChild(mAuth.getUid()).addListenerForSingleValueEvent(new ValueEventListener() {
+        ref.child("Users-Likes").orderByChild(mAuth.getUid()).addListenerForSingleValueEvent(new ValueEventListener() {
             @Override
             public void onDataChange(@NonNull DataSnapshot snapshot) {
                 if(snapshot.exists()){
                     events_size = snapshot.getChildrenCount();
                     for (DataSnapshot child : snapshot.getChildren()) {
-                        ref.child("Eventos").child(child.getKey()).addListenerForSingleValueEvent(new ValueEventListener() {
-                            @Override
-                            public void onDataChange(@NonNull DataSnapshot snapshot) {
-                                if (snapshot.exists()) {
-                                    Event e = snapshot.getValue(Event.class);
-                                    geoFire = new GeoFire(ref.child("Eventos-Locs"));
-                                    LocationCallback locationCallback = new LocationCallback() {
-                                        @Override
-                                        public void onLocationResult(String key, GeoLocation location) {
-                                            events.put(new String[]{key,e.getNome(), e.getEvent_type()}, location);
-                                            count++;
-                                            if(count == events_size){
-                                                count = 0L;
-                                                searchMap = new SearchMap(true, currentTag, events);
-                                                FragmentManager fragmentManager = getParentFragmentManager();
-                                                fragmentManager.beginTransaction().replace(R.id.map_4, searchMap).commit();
-                                            }
-                                        }
-                                        @Override
-                                        public void onCancelled(DatabaseError databaseError) {
-                                            Toast.makeText(getActivity().getApplicationContext(), "Error: location not found.", Toast.LENGTH_SHORT);
-                                        }
-                                    };
-                                    geoFire.getLocation(e.getEvent_id(), locationCallback);
-                                }
-                            }
-                            @Override
-                            public void onCancelled(@NonNull DatabaseError error) {}
-                        });
+                        Map<String, Long> childVal = (HashMap<String, Long>) child.getValue();
+                        Map.Entry<String, Long> entry = childVal.entrySet().iterator().next();
+                        if(entry.getValue() == 1L) {
+                            ref.child("Eventos").child(entry.getKey()).addListenerForSingleValueEvent(new ValueEventListener() {
+                                @Override
+                                public void onDataChange(@NonNull DataSnapshot snapshot) {
+                                    if (snapshot.exists()) {
+                                        Event e = snapshot.getValue(Event.class);
+                                        geoFire = new GeoFire(ref.child("Eventos-Locs"));
+                                        LocationCallback locationCallback = new LocationCallback() {
+                                            @Override
+                                            public void onLocationResult(String key, GeoLocation location) {
+                                                events.put(new String[]{key, e.getNome(), e.getEvent_type()}, location);
+                                                count++;
+                                                if (count == events_size) {
+                                                    count = 0L;
+                                                    searchMap = new SearchMap(true, currentTag, events);
+                                                    FragmentManager fragmentManager = getParentFragmentManager();
+                                                    fragmentManager.beginTransaction().replace(R.id.map_4, searchMap).commit();
+                                                }
+                                            }
+
+                                            @Override
+                                            public void onCancelled(DatabaseError databaseError) {
+                                                Toast.makeText(getActivity().getApplicationContext(), "Error: location not found.", Toast.LENGTH_SHORT);
+                                            }
+                                        };
+                                        geoFire.getLocation(e.getEvent_id(), locationCallback);
+                                    }
+                                }
+
+                                @Override
+                                public void onCancelled(@NonNull DatabaseError error) {
+                                }
+                            });
+                        }
                     }
                 }
             }
Index: app/src/main/java/com/example/habemusfesta/RecentEvents.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.habemusfesta;\r\n\r\nimport android.os.Bundle;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.fragment.app.FragmentManager;\r\n\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.Toast;\r\n\r\nimport com.example.habemusfesta.events.Event;\r\nimport com.example.habemusfesta.gps.SearchMap;\r\nimport com.firebase.geofire.GeoFire;\r\nimport com.firebase.geofire.GeoLocation;\r\nimport com.firebase.geofire.GeoQuery;\r\nimport com.firebase.geofire.LocationCallback;\r\nimport com.google.android.gms.maps.CameraUpdateFactory;\r\nimport com.google.android.gms.maps.GoogleMap;\r\nimport com.google.android.gms.maps.OnMapReadyCallback;\r\nimport com.google.android.gms.maps.SupportMapFragment;\r\nimport com.google.android.gms.maps.model.LatLng;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\n\r\nimport java.util.HashMap;\r\n\r\n/**\r\n * A fragment representing a list of Items.\r\n */\r\npublic class RecentEvents extends Fragment {\r\n\r\n    private GoogleMap map;\r\n    private HashMap<String[], GeoLocation> events = new HashMap<>();\r\n    private GeoFire geoFire;\r\n    private Long count = 0L;\r\n    private Long events_size = 0L;\r\n    private SearchMap searchMap;\r\n    private String currentTag;\r\n\r\n    public RecentEvents(String tag){ this.currentTag = tag; }\r\n\r\n\r\n    private OnMapReadyCallback callback = new OnMapReadyCallback() {\r\n\r\n        /**\r\n         * Manipulates the map once available.\r\n         * This callback is triggered when the map is ready to be used.\r\n         * This is where we can add markers or lines, add listeners or move the camera.\r\n         * In this case, we just add a marker near Sydney, Australia.\r\n         * If Google Play services is not installed on the device, the user will be prompted to\r\n         * install it inside the SupportMapFragment. This method will only be triggered once the\r\n         * user has installed Google Play services and returned to the app.\r\n         */\r\n        @Override\r\n        public void onMapReady(GoogleMap googleMap) {\r\n            map = googleMap;\r\n            //Move the camera to position\r\n            LatLng lisbon = new LatLng(38.736946, -9.142685);\r\n            map.moveCamera(CameraUpdateFactory.newLatLngZoom(lisbon, 10));\r\n        }\r\n    };\r\n\r\n\r\n    public void changeFilter(String tag){\r\n        this.currentTag = tag;\r\n        searchMap.hideMarkers(tag);\r\n    }\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        View view = inflater.inflate(R.layout.fragment_recent_events, container, false);\r\n        return view;\r\n    }\r\n\r\n    @Override\r\n    public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {\r\n        super.onViewCreated(view, savedInstanceState);\r\n        SupportMapFragment mapFragment =\r\n                (SupportMapFragment) getChildFragmentManager().findFragmentById(R.id.map_3);\r\n        if (mapFragment != null) {\r\n            mapFragment.getMapAsync(callback);\r\n        }\r\n        getMostRecentEvents();\r\n    }\r\n\r\n    private void getMostRecentEvents() { //its going to select the top 10 closest upcoming events\r\n        DatabaseReference ref = FirebaseDatabase.getInstance().getReference();\r\n        ref.child(\"Eventos\").orderByChild(\"data_inicial\").limitToLast(10).addListenerForSingleValueEvent(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                if (snapshot.exists()) {\r\n                    events_size = snapshot.getChildrenCount();\r\n                    for (DataSnapshot child : snapshot.getChildren()) {\r\n                        Event e = child.getValue(Event.class);\r\n                        geoFire = new GeoFire(ref.child(\"Eventos-Locs\"));\r\n                        LocationCallback locationCallback = new LocationCallback() {\r\n                            @Override\r\n                            public void onLocationResult(String key, GeoLocation location) {\r\n                                events.put(new String[]{key,e.getNome(), e.getEvent_type()}, location);\r\n                                count++;\r\n                                if(count == events_size){\r\n                                    count = 0L;\r\n                                    searchMap = new SearchMap(true, currentTag, events);\r\n                                    FragmentManager fragmentManager = getParentFragmentManager();\r\n                                    fragmentManager.beginTransaction().replace(R.id.map_3, searchMap).commit();\r\n                                }\r\n                            }\r\n\r\n                            @Override\r\n                            public void onCancelled(DatabaseError databaseError) {\r\n                                Toast.makeText(getActivity().getApplicationContext(), \"Error: location not found.\", Toast.LENGTH_SHORT);\r\n                            }\r\n                        };\r\n                        geoFire.getLocation(e.getEvent_id(), locationCallback);\r\n                    }\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {}\r\n        });\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/habemusfesta/RecentEvents.java	(revision a9ac09efa935b2b2429ac07271e7ac5e90583c9b)
+++ app/src/main/java/com/example/habemusfesta/RecentEvents.java	(date 1625150550869)
@@ -69,8 +69,10 @@
 
 
     public void changeFilter(String tag){
-        this.currentTag = tag;
-        searchMap.hideMarkers(tag);
+        if(searchMap != null) {
+            this.currentTag = tag;
+            searchMap.hideMarkers(tag);
+        }
     }
 
     @Override
